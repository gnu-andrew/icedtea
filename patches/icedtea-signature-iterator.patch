diff -r ee6af95bc459 openjdk/hotspot/src/share/vm/interpreter/oopMapCache.cpp
--- openjdk/hotspot/src/share/vm/interpreter/oopMapCache.cpp	Fri Nov 02 09:42:25 2007 +0000
+++ openjdk/hotspot/src/share/vm/interpreter/oopMapCache.cpp	Fri Nov 02 09:44:37 2007 +0000
@@ -284,7 +284,7 @@ class MaskFillerForNative: public Native
  public:
   void pass_int()                                { /* ignore */ }
   void pass_long()                               { /* ignore */ }
-#ifdef _LP64
+#if defined(_LP64) || defined(PPC) || defined(ZERO)
   void pass_float()                              { /* ignore */ }
 #endif
   void pass_double()                             { /* ignore */ }
diff -r ee6af95bc459 openjdk/hotspot/src/share/vm/runtime/signature.hpp
--- openjdk/hotspot/src/share/vm/runtime/signature.hpp	Fri Nov 02 09:42:25 2007 +0000
+++ openjdk/hotspot/src/share/vm/runtime/signature.hpp	Fri Nov 02 09:48:28 2007 +0000
@@ -278,11 +278,14 @@ class NativeSignatureIterator: public Si
 
   void do_bool  ()                     { pass_int();    _jni_offset++; _offset++;       }
   void do_char  ()                     { pass_int();    _jni_offset++; _offset++;       }
+#if defined(_LP64) || defined(PPC) || defined(ZERO)
+  void do_float ()                     { pass_float();  _jni_offset++; _offset++;       }
+#else
+  void do_float ()                     { pass_int();    _jni_offset++; _offset++;       }
+#endif  
 #ifdef _LP64
-  void do_float ()                     { pass_float();  _jni_offset++; _offset++;       }
   void do_double()                     { pass_double(); _jni_offset++; _offset += 2;    }
 #else
-  void do_float ()                     { pass_int();    _jni_offset++; _offset++;       }
   void do_double()                     { pass_double(); _jni_offset += 2; _offset += 2; }
 #endif
   void do_byte  ()                     { pass_int();    _jni_offset++; _offset++;       }
@@ -306,8 +309,10 @@ class NativeSignatureIterator: public Si
   virtual void pass_int()              = 0;
   virtual void pass_long()             = 0;
   virtual void pass_object()           = 0;
+#if defined(_LP64) || defined(PPC) || defined(ZERO)
+  virtual void pass_float()            = 0;
+#endif
 #ifdef _LP64
-  virtual void pass_float()            = 0;
   virtual void pass_double()           = 0;
 #else
   virtual void pass_double()           { pass_long(); }  // may be same as long
