diff -Nru openjdk.orig/jdk/make/launchers/Makefile.launcher openjdk/jdk/make/launchers/Makefile.launcher
--- openjdk.orig/jdk/make/launchers/Makefile.launcher	2008-07-03 08:42:32.000000000 +0100
+++ openjdk/jdk/make/launchers/Makefile.launcher	2008-07-21 02:49:53.000000000 +0100
@@ -153,6 +153,16 @@
   endif
 endif
 
+# pluginappletviewer only
+ifeq ($(PROGRAM), pluginappletviewer)
+  OTHER_CPPFLAGS += -DUSE_UMASK=\"077\"
+endif
+
+# javaws only
+ifeq ($(PROGRAM), javaws)
+  OTHER_CPPFLAGS += -DUSE_UMASK=\"077\"
+endif
+
 # GUI tools
 ifeq ($(GUI_TOOL),true)
   ifneq ($(PLATFORM), windows)
diff -Nru openjdk.orig/jdk/src/share/bin/java.c openjdk/jdk/src/share/bin/java.c
--- openjdk.orig/jdk/src/share/bin/java.c	2008-07-03 08:42:35.000000000 +0100
+++ openjdk/jdk/src/share/bin/java.c	2008-07-21 02:53:15.000000000 +0100
@@ -76,6 +76,8 @@
 static jboolean _wc_enabled = JNI_FALSE;
 static jint _ergo_policy = DEFAULT_POLICY;
 
+#define MAXMASK 4095 /* Same as octal 07777 */
+
 /*
  * Entries for splash screen environment variables.
  * putenv is performed in SelectVersion. We need
@@ -162,6 +164,10 @@
 
 int JNICALL JavaMain(void * args); /* entry point                  */
 
+/* umask things */
+static int FindUMask(int *, char ***, int *);
+static int VerifyMask(char *, int*);
+ 
 typedef struct {
   int     argc;
   char ** argv;
@@ -272,6 +278,26 @@
         SetClassPath(cpath);
     }
 
+#ifdef USE_UMASK
+	/* Set umask */
+	int mask;
+    // Check to see if we can find a umask on the command line.
+    if (FindUMask(&argc, &argv, &mask) < 0)
+    {
+        // We didn't find a umask, so fall back to the default one.
+        char * defaultMask = (char *) JLI_MemAlloc(5 * sizeof(char));
+        strcpy(defaultMask, USE_UMASK);
+        int converted;
+        VerifyMask(defaultMask, &converted);
+        JLI_MemFree(defaultMask);
+		umask(converted); /* from sys/stat.h */
+    }
+    else
+    {
+		umask(mask);
+    }
+#endif
+
     /*
      *  Parse command line options; if the return value of
      *  ParseArguments is false, the program should exit.
@@ -2027,3 +2053,87 @@
     fprintf(stderr, "\n");
     va_end(vl);
 }
+
+/**
+ * Searches argv to find any parameters that start with "-umask=".
+ * Sets maskToSet with the mask if a -umask is found, and if the mask
+ * supplied is valid. Returns 1 if a valid mask was found and set,
+ * -1 otherwise.
+ */
+int FindUMask(int *pargc, char *** pargv, int *maskToSet)
+{
+    int found_mask = -1;
+
+    // our handles to the original list
+    int argc = *pargc;
+    char **argv = *pargv;
+
+    // the new set
+    int nargc = argc;
+    char ** nargv = (char **) JLI_MemAlloc((nargc + 1) * sizeof(char *));
+
+    // set the original set to the new set
+    *pargv = nargv;
+    *pargc = nargc;
+
+    char *maskString = (char *) JLI_MemAlloc(6 * sizeof(char *));
+	int i;
+    for (i = 0; i < argc; i++)
+    {
+        char *arg = argv[i];
+        if (strncmp(arg, "-umask=",7) == 0)
+        {
+            strncpy(maskString, arg+7, 5);
+
+            if (VerifyMask(maskString, maskToSet) < 0)
+            {
+                printf("Invalid umask %s, application stopped.\n", maskString);
+                exit(1);
+            }
+
+            found_mask = 1;
+            nargc--;
+            (*pargc)--;
+        }
+        else
+        {
+            *nargv++ = arg;
+        }
+    }
+
+    JLI_MemFree(maskString);
+
+    return found_mask;
+}
+
+/**
+ * Takes an octal mask in string form, and converts it to
+ * decimal form in convertedMask. The decimal form can then be
+ * easily passed to umask(). Returns 1 if the mask is valid, -1 otherwise.
+ */
+int VerifyMask(char * maskString, int * convertedMask)
+{
+    // Borrowed from coreutils modechange.c
+    if ('0' <= *maskString && *maskString < '8')
+    {
+        unsigned int decimal_mode = 0;
+
+        do {
+            decimal_mode = 8 * decimal_mode + *maskString++ - '0';
+        } while ('0' <= *maskString && *maskString < '8');
+
+        if (decimal_mode > MAXMASK)
+            return -1;
+        else if (*maskString)
+            return -1;
+        else
+            *convertedMask = decimal_mode;
+
+        return 1;
+    }
+    else
+    {
+        return -1;
+    }
+
+}
diff -Nru openjdk.orig/jdk/src/share/bin/java.h openjdk/jdk/src/share/bin/java.h
--- openjdk.orig/jdk/src/share/bin/java.h	2008-07-21 02:51:54.000000000 +0100
+++ openjdk/jdk/src/share/bin/java.h	2008-07-21 02:53:18.000000000 +0100
@@ -29,6 +29,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <sys/stat.h>
 #include <limits.h>
 
 #include <jni.h>
