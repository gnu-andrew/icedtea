--- ../openjdkb23/openjdk/jdk/src/share/classes/sun/security/ssl/Handshaker.java	2007-10-30 04:38:10.000000000 -0400
+++ openjdk/jdk/src/share/classes/sun/security/ssl/Handshaker.java	2007-11-13 13:06:01.000000000 -0500
@@ -36,6 +36,7 @@
 import java.security.PrivilegedExceptionAction;
 import java.security.PrivilegedActionException;
 import java.security.cert.X509Certificate;
+import java.security.spec.AlgorithmParameterSpec;
 
 import javax.crypto.*;
 import javax.crypto.spec.*;
@@ -685,8 +686,8 @@
         SecretKey masterSecret;
         try {
             KeyGenerator kg = JsseJce.getKeyGenerator("SunTlsMasterSecret");
-            kg.init(spec);
-            masterSecret = kg.generateKey();
+            kg.init((AlgorithmParameterSpec) spec);
+	    masterSecret = kg.generateKey();
         } catch (GeneralSecurityException e) {
             // For RSA premaster secrets, do not signal a protocol error
             // due to the Bleichenbacher attack. See comments further down.
--- ../openjdkb23/openjdk/jdk/src/share/classes/sun/security/ssl/RSAClientKeyExchange.java	2007-10-30 04:38:10.000000000 -0400
+++ openjdk/jdk/src/share/classes/sun/security/ssl/RSAClientKeyExchange.java	2007-11-13 13:06:42.000000000 -0500
@@ -36,6 +36,8 @@
 import javax.net.ssl.*;
 
 import sun.security.internal.spec.TlsRsaPremasterSecretParameterSpec;
+import java.security.spec.AlgorithmParameterSpec;
+
 
 /**
  * This is the client key exchange message (CLIENT --> SERVER) used with
@@ -104,8 +106,8 @@
 
         try {
             KeyGenerator kg = JsseJce.getKeyGenerator("SunTlsRsaPremasterSecret");
-            kg.init(new TlsRsaPremasterSecretParameterSpec(major, minor));
-            preMaster = kg.generateKey();
+            kg.init((AlgorithmParameterSpec) (new TlsRsaPremasterSecretParameterSpec(major, minor)));
+	    preMaster = kg.generateKey();
 
             Cipher cipher = JsseJce.getCipher(JsseJce.CIPHER_RSA_PKCS1);
             cipher.init(Cipher.WRAP_MODE, publicKey, generator);
