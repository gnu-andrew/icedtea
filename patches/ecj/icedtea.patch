diff -Nru openjdk-ecj.orig/corba/make/com/sun/corba/se/Makefile openjdk-ecj/corba/make/com/sun/corba/se/Makefile
--- openjdk-ecj.orig/corba/make/com/sun/corba/se/Makefile	2009-03-30 17:13:01.000000000 +0100
+++ openjdk-ecj/corba/make/com/sun/corba/se/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -42,7 +42,7 @@
 # the rmic iiop backend needs some classes that are part of the impl/util
 # package.  These classes use log wrappers, so they must be built after
 # pept and before rmi.
-SUBDIRS = sources pept corespi core spi impl rmi
+SUBDIRS = org pept corespi core spi impl rmi
 all build clean clobber::
 	$(SUBDIRS-loop)
 
diff -Nru openjdk-ecj.orig/corba/make/com/sun/corba/se/org/Makefile openjdk-ecj/corba/make/com/sun/corba/se/org/Makefile
--- openjdk-ecj.orig/corba/make/com/sun/corba/se/org/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ openjdk-ecj/corba/make/com/sun/corba/se/org/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -0,0 +1,38 @@
+#
+# Copyright 2001-2005 Sun Microsystems, Inc.  All Rights Reserved.
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+#
+# This code is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License version 2 only, as
+# published by the Free Software Foundation.  Sun designates this
+# particular file as subject to the "Classpath" exception as provided
+# by Sun in the LICENSE file that accompanied this code.
+#
+# This code is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+# version 2 for more details (a copy is included in the LICENSE file that
+# accompanied this code).
+#
+# You should have received a copy of the GNU General Public License version
+# 2 along with this work; if not, write to the Free Software Foundation,
+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
+# CA 95054 USA or visit www.sun.com if you need additional information or
+# have any questions.
+#
+
+BUILDDIR = ../../../../..
+PACKAGE = com.sun.corba.se
+PRODUCT = org
+
+include $(BUILDDIR)/common/Defs.gmk
+
+FILES_java=\
+	com/sun/corba/se/org/omg/CORBA/ORB.java
+
+#
+# Include
+#
+include $(BUILDDIR)/common/Classes.gmk
diff -Nru openjdk-ecj.orig/corba/make/common/Defs.gmk openjdk-ecj/corba/make/common/Defs.gmk
--- openjdk-ecj.orig/corba/make/common/Defs.gmk	2009-03-30 17:13:01.000000000 +0100
+++ openjdk-ecj/corba/make/common/Defs.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -53,6 +53,13 @@
 
 _OUTPUTDIR=$(TOPDIR)/build/$(PLATFORM)-$(ARCH)
 
+
+ifdef ALT_LANGTOOLS_DIST
+  LANGTOOLS_DIST :=$(call FullPath,$(ALT_LANGTOOLS_DIST))
+else
+  LANGTOOLS_DIST =
+endif 
+
 #
 # Get platform definitions
 #
@@ -129,8 +136,6 @@
 # for build tool jar files
 BUILDTOOLJARDIR     = $(OUTPUTDIR)/btjars
 ABS_BUILDTOOLJARDIR = $(ABS_OUTPUTDIR)/btjars
-# for generated java source files
-GENSRCDIR           = $(OUTPUTDIR)/gensrc
 # for generated C source files (not javah)
 GENNATIVESRCDIR     = $(OUTPUTDIR)/gennativesrc
 # for imported source files
@@ -231,7 +236,7 @@
 # We define an intermediate variable for Java files because
 # we use its value later to help define $SOURCEPATH
 
-VPATH0.java = $(GENSRCDIR)$(CLASSPATH_SEPARATOR)$(PLATFORM_SRC)/classes$(CLASSPATH_SEPARATOR)$(SHARE_SRC)/classes
+VPATH0.java = $(GENSRCDIR)$(CLASSPATH_SEPARATOR)$(SHARE_SRC)/classes
 VPATH.java = $(VPATH0.java)
 vpath %.java $(VPATH.java)
 vpath %.class $(CLASSBINDIR)
diff -Nru openjdk-ecj.orig/corba/make/common/Defs-linux.gmk openjdk-ecj/corba/make/common/Defs-linux.gmk
--- openjdk-ecj.orig/corba/make/common/Defs-linux.gmk	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/corba/make/common/Defs-linux.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -276,7 +276,7 @@
 		    fi; \
 		  done)
 JVMLIB          = -L$(BOOTDIR)/jre/lib/$(LIBARCH)/$(VM_NAME) -ljvm
-JAVALIB         = -L$(BOOTDIR)/jre/lib/$(LIBARCH) -ljava $(JVMLIB)
+JAVALIB         = -L$(BOOTDIR)/jre/lib/$(LIBARCH) -L$(dir $(shell $(if $(GCJ),$(GCJ),$(subst gcc,gcj,$(CC))) --print-file-name=libgcj.so)) -lgcj $(JVMLIB)
 
 #
 # We want to privatize JVM symbols on Solaris. This is so the user can
diff -Nru openjdk-ecj.orig/corba/make/common/Rules.gmk openjdk-ecj/corba/make/common/Rules.gmk
--- openjdk-ecj.orig/corba/make/common/Rules.gmk	2009-03-30 23:07:09.000000000 +0100
+++ openjdk-ecj/corba/make/common/Rules.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -201,8 +201,10 @@
 	  $(ECHO) "# Java sources to be compiled: (listed in file $(JAVA_SOURCE_LIST))"; \
 	  $(CAT) $(JAVA_SOURCE_LIST); \
 	  $(ECHO) "# Running javac:"; \
-	  $(ECHO) $(JAVAC_CMD) $(JAVAC_PREFER_SOURCE) -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
-	  $(JAVAC_CMD) $(JAVAC_PREFER_SOURCE) -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
+	  $(ECHO) $(JAVAC_CMD) -bootclasspath $(ICEDTEA_RT):$(ICEDTEA_BUILD_DIR)/corba/classes \
+		 -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
+	  $(JAVAC_CMD) -bootclasspath $(ICEDTEA_RT):$(ICEDTEA_BUILD_DIR)/corba/classes \
+		 -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
 	fi
 	@$(java-vm-cleanup)
 
diff -Nru openjdk-ecj.orig/corba/make/common/shared/Defs-java.gmk openjdk-ecj/corba/make/common/shared/Defs-java.gmk
--- openjdk-ecj.orig/corba/make/common/shared/Defs-java.gmk	2009-03-30 23:07:09.000000000 +0100
+++ openjdk-ecj/corba/make/common/shared/Defs-java.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -120,31 +120,14 @@
 JAVACFLAGS  += $(OTHER_JAVACFLAGS)
 
 # Needed for javah
-JAVAHFLAGS += -classpath $(CLASSBINDIR)
+JAVAHFLAGS += -classpath $(CLASSBINDIR):$(ICEDTEA_RT):$(ICEDTEA_JCE):$(CLASSDESTDIR)
 
 # Langtools
-ifdef LANGTOOLS_DIST
-  JAVAC_JAR   = $(LANGTOOLS_DIST)/bootstrap/lib/javac.jar
-  JAVAH_JAR   = $(LANGTOOLS_DIST)/bootstrap/lib/javah.jar
-  JAVADOC_JAR = $(LANGTOOLS_DIST)/bootstrap/lib/javadoc.jar
-  DOCLETS_JAR = $(LANGTOOLS_DIST)/bootstrap/lib/doclets.jar
-  JAVAC_CMD   = $(BOOT_JAVA_CMD) \
-		"-Xbootclasspath/p:$(JAVAC_JAR)" \
-		-jar $(JAVAC_JAR) $(JAVACFLAGS)
-  JAVAH_CMD   = $(BOOT_JAVA_CMD) \
-		"-Xbootclasspath/p:$(JAVAH_JAR)$(CLASSPATH_SEPARATOR)$(JAVADOC_JAR)$(CLASSPATH_SEPARATOR)$(JAVAC_JAR)"  \
-		-jar $(JAVAH_JAR) $(JAVAHFLAGS)
-  JAVADOC_CMD = $(BOOT_JAVA_CMD) \
-		"-Xbootclasspath/p:$(JAVADOC_JAR)$(CLASSPATH_SEPARATOR)$(JAVAC_JAR)$(CLASSPATH_SEPARATOR)$(DOCLETS_JAR)" \
-		-jar $(JAVADOC_JAR)
-else
-  # If no explicit tools, use boot tools (add VM flags in this case)
-  JAVAC_CMD     = $(JAVA_TOOLS_DIR)/javac $(JAVAC_JVM_FLAGS) \
-		  $(JAVACFLAGS)
-  JAVAH_CMD     = $(JAVA_TOOLS_DIR)/javah \
-		  $(JAVAHFLAGS)
-  JAVADOC_CMD   = $(JAVA_TOOLS_DIR)/javadoc $(JAVA_TOOLS_FLAGS:%=-J%)
-endif
+# If no explicit tools, use boot tools (add VM flags in this case)
+JAVAC_CMD     = $(JAVA_TOOLS_DIR)/javac $(JAVAC_JVM_FLAGS) \
+  		  $(JAVACFLAGS)
+JAVAH_CMD     = $(JAVA_TOOLS_DIR)/javah \
+  		  $(JAVAHFLAGS)
 
 # Override of what javac to use (see deploy workspace)
 ifdef JAVAC
diff -Nru openjdk-ecj.orig/corba/make/org/omg/sources/Makefile openjdk-ecj/corba/make/org/omg/sources/Makefile
--- openjdk-ecj.orig/corba/make/org/omg/sources/Makefile	2009-03-30 17:13:01.000000000 +0100
+++ openjdk-ecj/corba/make/org/omg/sources/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -93,8 +93,6 @@
 POAHELHOLFILES =    $(POA_GENERATED_HELP_HOL_java:%=$(GENSRCDIR)/%)
 
 $(POAGENERATEDFILES):: $(POA.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableServer" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -corba 3.0 -fall -pkgPrefix PortableServer org.omg $(POA.IDL)
-	$(RM) -r $(POAHELHOLFILES)
 
 poa.compile: $(POAGENERATEDFILES)
 
@@ -110,10 +108,6 @@
 
 # Generating and deleting unused files to reduce images size
 $(DYNANYFILES): $(DYNAMIC_ANY.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(DYNANY_IDLJ_FLAGS) $(DYNAMIC_ANY.IDL)
-	$(RM) $(DYNANY_DIR)/*POA*
-	$(RM) $(DYNANY_DIR)/*Holder*
-	$(RM) $(DYNANYDELETEFILES)
 
 dynany.compile: $(DYNANYFILES)
 
@@ -125,12 +119,6 @@
 TR_IDLJ_FLAGS =-i "$(SRC_DIR)/org/omg/PortableInterceptor" -i "$(SRC_DIR)/org/omg/PortableServer" -i "$(SRC_DIR)/org/omg/CosTransactions"
 
 $(TRGENERATEDFILES):: $(COSTRANSACTIONS.IDL) $(COSTSINTEROP.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg -pkgPrefix CosTransactions org.omg $(COSTRANSACTIONS.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg -pkgPrefix CosTSInteroperation org.omg $(COSTSINTEROP.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fallTIE -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fallTIE -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
 
 tr.compile: $(TRGENERATEDFILES)
 
@@ -144,7 +132,6 @@
 # _NamingContextImplBase.java and _BindingIteratorImplBase.java files
 # to GENSRC directory. Note that these two classes are deprecated.
 $(NSGENERATEDFILES): $(NAMESERVICE.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i $(NAMESERVICEDIR) -fall -pkgPrefix CosNaming org.omg $(NAMESERVICE.IDL)
 
 ns.compile: $(NSGENERATEDFILES)
 
@@ -156,8 +143,6 @@
 IOPDELETEFILES =    $(IOP_TO_DELETE_FILES:%=$(GENSRCDIR)/%)
 
 $(IOPGENERATEDFILES):: $(IOP.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 -D CORBA3 -pkgPrefix IOP org.omg $(IOP.IDL)
-	$(RM) -r $(IOPDELETEFILES)
 
 iop.compile: $(IOPGENERATEDFILES)
 
@@ -169,8 +154,6 @@
 CORBAXDUPLICATEFILES = $(CORBA_DUPLICATE_java:%=$(GENSRCDIR)/%)
 
 $(CORBAXGENERATEDFILES):: $(CORBAX.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 $(CORBAX.IDL)
-	$(RM) $(CORBAXDUPLICATEFILES)
 
 corbax.compile: $(CORBAXGENERATEDFILES)
 
@@ -181,7 +164,6 @@
 MESSAGINGGENERATEDFILES = $(Messaging_java:%=$(GENSRCDIR)/%)
 
 $(MESSAGINGGENERATEDFILES):: $(MESSAGING.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 -pkgPrefix Messaging org.omg $(MESSAGING.IDL)
 
 messaging.compile: $(MESSAGINGGENERATEDFILES)
 
@@ -195,8 +177,6 @@
 PIHELHOLFILES = $(PI_GENERATED_HELP_HOL_java:%=$(GENSRCDIR)/%)
 
 $(PIGENERATEDFILES):: $(INTERCEPTORS.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -pkgPrefix PortableInterceptor org.omg -pkgPrefix Dynamic org.omg -pkgPrefix IOP org.omg -corba 3.0 -D CORBA3 $(INTERCEPTORS.IDL)
-	$(RM) $(PIHELHOLFILES)
 
 pi.compile: $(PIGENERATEDFILES)
 
diff -Nru openjdk-ecj.orig/corba/make/sun/rmi/corbalogsources/Makefile openjdk-ecj/corba/make/sun/rmi/corbalogsources/Makefile
--- openjdk-ecj.orig/corba/make/sun/rmi/corbalogsources/Makefile	2009-03-30 23:07:09.000000000 +0100
+++ openjdk-ecj/corba/make/sun/rmi/corbalogsources/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -172,7 +172,6 @@
 ACTIVATIONFILES = $(com_sun_corba_se_spi_activation_java:%=$(GENSRCDIR)/%)
 
 $(ACTIVATIONFILES): $(ACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) -i $(ACTIVATIONFILEDIR) -fall -oldImplBase -pkgPrefix activation com.sun.corba.se.spi $(ACTIVATION.IDL)
 
 activation.idl.compile: $(ACTIVATIONFILES)
 
@@ -195,7 +194,6 @@
 
 # REVISIT: remove -oldImplBase
 $(PORTABLEACTIVATIONFILES): $(PORTABLEACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) $(PORTABLEACTIVATION_INCLUDES) $(PORTABLEACTIVATION_PKG_PREFIXES) -fall -oldImplBase -corba 3.0 -D CORBA3 $(PORTABLEACTIVATION.IDL)
 
 portableactivation.idl.compile: $(PORTABLEACTIVATIONFILES)
 
diff -Nru openjdk-ecj.orig/jaxp/make/build.xml openjdk-ecj/jaxp/make/build.xml
--- openjdk-ecj.orig/jaxp/make/build.xml	2009-06-30 14:24:48.000000000 +0100
+++ openjdk-ecj/jaxp/make/build.xml	2009-07-01 13:55:31.000000000 +0100
@@ -71,7 +71,10 @@
       <mkdir dir="${build.toolclasses.dir}"/>
       <javac srcdir="${make.tools.dir}/StripProperties"
 		destdir="${build.toolclasses.dir}/"
-		classpath="${ant.home}/lib/ant.jar"/>
+		classpath="${ant.home}/lib/ant.jar"
+		fork="true"
+		executable="${javac.executable}"
+		source="1.5"/>
       <taskdef name="pstrip"
 		 classname="StripPropertiesTask"
 		 classpath="${build.toolclasses.dir}/"/>
@@ -87,7 +90,8 @@
              memoryMaximumSize="${javac.memoryMaximumSize}"
 	     source="${javac.source}"
 	     debug="${javac.debug}"
-             target="${javac.target}">
+             target="${javac.target}"
+             executable="${javac.executable}">
          <compilerarg value="-J-Xbootclasspath/p:${bootstrap.dir}/lib/javac.jar"/>
          <compilerarg line="${javac.version.opt}"/>
       </javac>
diff -Nru openjdk-ecj.orig/jaxp/make/Makefile openjdk-ecj/jaxp/make/Makefile
--- openjdk-ecj.orig/jaxp/make/Makefile	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/jaxp/make/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -92,7 +92,7 @@
 endif 
 
 ifdef ALT_BOOTDIR
-  ANT_JAVA_HOME = JAVA_HOME=$(ALT_BOOTDIR)
+  ANT_OPTIONS += -Djavac.executable=$(ALT_BOOTDIR)/bin/javac
 endif
 
 ifdef ALT_OUTPUTDIR
diff -Nru openjdk-ecj.orig/jaxws/make/build.properties openjdk-ecj/jaxws/make/build.properties
--- openjdk-ecj.orig/jaxws/make/build.properties	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/jaxws/make/build.properties	2009-07-01 13:52:45.000000000 +0100
@@ -37,7 +37,7 @@
 # set the following to -version to verify the versions of javac being used
 javac.version.opt = 
 # in time, there should be no exceptions to -Xlint:all
-javac.lint.opts = -Xlint:all,-unchecked,-deprecation,-fallthrough,-cast,-serial -Werror
+javac.lint.opts = -Xlint:all,-unchecked,-deprecation,-fallthrough,-cast,-serial
 
 # JVM memory size
 javac.memoryInitialSize = 128m
diff -Nru openjdk-ecj.orig/jaxws/make/build.xml openjdk-ecj/jaxws/make/build.xml
--- openjdk-ecj.orig/jaxws/make/build.xml	2009-06-30 14:24:56.000000000 +0100
+++ openjdk-ecj/jaxws/make/build.xml	2009-07-01 13:52:45.000000000 +0100
@@ -93,7 +93,10 @@
       <mkdir dir="${build.toolclasses.dir}"/>
       <javac srcdir="${make.tools.dir}/StripProperties"
 		destdir="${build.toolclasses.dir}/"
-		classpath="${ant.home}/lib/ant.jar"/>
+		fork="true"
+                executable="${javac.executable}"
+		classpath="${ant.home}/lib/ant.jar"
+		source="1.5"/>
       <taskdef name="pstrip"
 		 classname="StripPropertiesTask"
 		 classpath="${build.toolclasses.dir}/"/>
@@ -111,6 +114,7 @@
 	     debug="${javac.debug}"
              target="${javac.target}"
              excludes="com/sun/tools/internal/txw2/**">
+ 	 <compilerarg line="-bootclasspath ${build.dir}/../../jaxp/build/classes:${build.classes.dir}:../../../generated:${boot.java.home}/lib/tools.jar:${boot.java.home}/jre/lib/rt.jar:${boot.java.home}/jre/lib/rt-system.jar"/>
          <compilerarg value="-J-Xbootclasspath/p:${bootstrap.dir}/lib/javac.jar"/>
          <compilerarg line="${javac.version.opt}"/>
          <compilerarg line="${javac.no.jdk.warnings}"/>
diff -Nru openjdk-ecj.orig/jaxws/make/Makefile openjdk-ecj/jaxws/make/Makefile
--- openjdk-ecj.orig/jaxws/make/Makefile	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/jaxws/make/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -92,8 +92,8 @@
 endif 
 
 ifdef ALT_BOOTDIR
-  ANT_OPTIONS += -Dplugs=$(ALT_BINARY_PLUGS_PATH)
-  ANT_JAVA_HOME = JAVA_HOME=$(ALT_BOOTDIR)
+  ANT_OPTIONS += -Dboot.java.home=$(ALT_BOOTDIR)
+  ANT_OPTIONS += -Djavac.executable=$(ALT_BOOTDIR)/bin/javac
 endif
 
 ifdef ALT_OUTPUTDIR
diff -Nru openjdk-ecj.orig/jdk/make/common/BuildToolJar.gmk openjdk-ecj/jdk/make/common/BuildToolJar.gmk
--- openjdk-ecj.orig/jdk/make/common/BuildToolJar.gmk	2009-03-30 17:23:03.000000000 +0100
+++ openjdk-ecj/jdk/make/common/BuildToolJar.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -43,7 +43,8 @@
 	@$(prep-target)
 	@$(MKDIR) -p $(BUILDTOOLCLASSDIR)
 	$(BOOT_JAVAC_CMD) -d $(BUILDTOOLCLASSDIR) \
-	    -sourcepath $(BUILDTOOL_SOURCE_ROOT) $(BUILDTOOL_MAIN_SOURCE_FILE)
+	    -sourcepath $(BUILDTOOL_SOURCE_ROOT) -classpath $(ICEDTEA_RT) \
+	    $(BUILDTOOL_MAIN_SOURCE_FILE)
 	$(BOOT_JAR_CMD) cfm $@ $(BUILDTOOL_MANIFEST_FILE) \
 	    -C $(BUILDTOOLCLASSDIR) $(PKGDIR) \
 	    $(BOOT_JAR_JFLAGS) || $(RM) $@
diff -Nru openjdk-ecj.orig/jdk/make/common/Release.gmk openjdk-ecj/jdk/make/common/Release.gmk
--- openjdk-ecj.orig/jdk/make/common/Release.gmk	2009-07-01 13:42:20.000000000 +0100
+++ openjdk-ecj/jdk/make/common/Release.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -652,10 +652,23 @@
 $(RES_JAR_ARGLIST): $(RES_JAR_FILELIST)
 	$(prep-target)
 	$(SED) -e "s@^@-C $(CLASSBINDIR) @" $< > $@
-$(RESOURCES_JAR): $(RES_JAR_ARGLIST) $(JAR_MANIFEST_FILE)
+$(RESOURCES_JAR): \
+    $(if $(JAR_KNOWS_ATFILE),$(RES_JAR_FILELIST),$(RES_JAR_ARGLIST)) \
+    $(JAR_MANIFEST_FILE)
 	$(prep-target)
+ifneq (,$(JAR_KNOWS_ATFILE))
+	(cd $(CLASSBINDIR) && \
 	$(BOOT_JAR_CMD) c0mf $(JAR_MANIFEST_FILE) $@ \
-	    @$(RES_JAR_ARGLIST) $(BOOT_JAR_JFLAGS)
+	    $(JAR_JFLAGS) @$(RES_JAR_FILELIST))
+else ifneq (,$(JAR_ACCEPTS_STDIN_LIST))
+	(cd $(CLASSBINDIR) && $(CAT) $(RES_JAR_FILELIST) | \
+	$(BOOT_JAR_CMD) c0mf@ $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS))
+else
+	(cd $(CLASSBINDIR) && \
+	$(BOOT_JAR_CMD) c0mf $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS) `cat $(RES_JAR_FILELIST)`)
+endif
 	@$(java-vm-cleanup)
 
 # Create jsse.jar containing SunJSSE implementation classes
@@ -711,10 +724,18 @@
 $(RT_JAR_ARGLIST): $(RT_JAR_FILELIST)
 	$(prep-target)
 	$(SED) -e "s@^@-C $(CLASSBINDIR) @" $< > $@
-$(RT_JAR): $(RT_JAR_ARGLIST) $(JAR_MANIFEST_FILE)
+$(RT_JAR): $(if $(JAR_KNOWS_ATFILE),$(RT_JAR_FILELIST),$(RT_JAR_ARGLIST)) \
+     $(JAR_MANIFEST_FILE)
 	$(prep-target)
+ifneq (,$(JAR_KNOWS_ATFILE))
+	(cd $(CLASSBINDIR) && $(CAT) $(RT_JAR_FILELIST) | \
+	$(BOOT_JAR_CMD) c0mf@ $(JAR_MANIFEST_FILE) $@ \
+	    $(BOOT_JAR_JFLAGS))
+else
+	(cd $(CLASSBINDIR) && \
 	$(BOOT_JAR_CMD) c0mf $(JAR_MANIFEST_FILE) $@ \
-	    @$(RT_JAR_ARGLIST) $(BOOT_JAR_JFLAGS)
+	    $(BOOT_JAR_JFLAGS) `$(CAT) $(RT_JAR_FILELIST)`)
+endif
 	@$(java-vm-cleanup)
 
 # Meta-index construction to make core class loaders lazier
@@ -945,19 +966,6 @@
 	@$(java-vm-cleanup)
 	$(CP) $(LIBDIR)/tools.jar $(JDK_IMAGE_DIR)/lib/tools.jar
 	@#
-	@# lib/ct.sym
-	@#
-	$(MKDIR) -p $(OUTPUTDIR)/symbols/META-INF/sym
-	$(JAVAC_CMD) -XDprocess.packages -proc:only \
-	    -processor com.sun.tools.javac.sym.CreateSymbols \
-	    -Acom.sun.tools.javac.sym.Jar=$(RT_JAR) \
-	    -Acom.sun.tools.javac.sym.Dest=$(OUTPUTDIR)/symbols/META-INF/sym/rt.jar \
-	    $(CORE_PKGS) $(NON_CORE_PKGS) $(EXCLUDE_PROPWARN_PKGS)
-	$(BOOT_JAR_CMD) c0f $(LIBDIR)/ct.sym \
-	    -C $(OUTPUTDIR)/symbols META-INF $(BOOT_JAR_JFLAGS)
-	@$(java-vm-cleanup)
-	$(CP) $(LIBDIR)/ct.sym $(JDK_IMAGE_DIR)/lib/ct.sym
-	@#
 	@# CORBA supported orb.idl and ir.idl should be copied to lib
 	@#
 	$(CP) $(LIBDIR)/orb.idl $(JDK_IMAGE_DIR)/lib/orb.idl
@@ -1034,16 +1042,6 @@
 	$(CP) $(PLATFORM_SRC)/bin/java_md.h $(JDK_IMAGE_DIR)/src/launcher
 	$(CD) $(JDK_IMAGE_DIR)/src && $(ZIPEXE) -qr ../src.zip *
 	$(RM) -r $(JDK_IMAGE_DIR)/src
-	@#
-	@# demo, include
-	@#
-	$(CP) -r -f $(DEMODIR) $(JDK_IMAGE_DIR)
-	$(CP) -r -f $(SAMPLEDIR) $(JDK_IMAGE_DIR)
-	$(CP) -r $(INCLUDEDIR) $(JDK_IMAGE_DIR)
-	@#
-	@# Swing BeanInfo generation
-	@#
-	$(CD) javax/swing/beaninfo && $(MAKE) swing-1.2-beans
 ifneq ($(PLATFORM), windows)
 	$(call copy-man-pages,$(JDK_IMAGE_DIR),$(JDK_MAN_PAGES))
 endif # !windows
diff -Nru openjdk-ecj.orig/jdk/make/common/Rules.gmk openjdk-ecj/jdk/make/common/Rules.gmk
--- openjdk-ecj.orig/jdk/make/common/Rules.gmk	2009-03-30 17:23:03.000000000 +0100
+++ openjdk-ecj/jdk/make/common/Rules.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -237,8 +237,9 @@
 	  $(ECHO) "# Java sources to be compiled: (listed in file $<)"; \
 	  $(CAT) $<.filtered; \
 	  $(ECHO) "# Running javac:"; \
-	  $(ECHO) $(JAVAC_CMD) -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$<.filtered; \
-	  $(JAVAC_CMD) -sourcepath "$(SOURCEPATH)" -d $(CLASSDESTDIR) @$<.filtered; \
+	  $(ECHO) $(JAVAC_CMD) -sourcepath "$(SOURCEPATH)" -bootclasspath "$(ICEDTEA_RT):$(ICEDTEA_JCE):$(CLASSDESTDIR)" \
+          -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
+          $(JAVAC_CMD) -sourcepath "$(SOURCEPATH)" -bootclasspath "$(ICEDTEA_RT):$(ICEDTEA_JCE):$(CLASSDESTDIR)" -d $(CLASSDESTDIR) @$(JAVA_SOURCE_LIST); \
 	fi
 	@$(java-vm-cleanup)
 
@@ -302,7 +303,11 @@
 	$(prep-target)
 	@$(ECHO) "# Running javah:"
 	$(JAVAH_CMD) -d $(CLASSHDRDIR)/ \
-		$(CLASSES.export) $(subst $$,\$$,$(EXPORTED_inner))
+		$(CLASSES.export) 
+	$(foreach innerclass,$(subst $$,\$$,$(EXPORTED_inner)), \
+	  $(JAVAH_CMD) \
+	    -o $(CLASSHDRDIR)/$(subst .,_,$(subst \$$,_,$(innerclass))).h \
+	    $(innerclass))
 	@$(java-vm-cleanup)
 	@$(TOUCH) $@
 
diff -Nru openjdk-ecj.orig/jdk/make/common/shared/Defs-java.gmk openjdk-ecj/jdk/make/common/shared/Defs-java.gmk
--- openjdk-ecj.orig/jdk/make/common/shared/Defs-java.gmk	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/jdk/make/common/shared/Defs-java.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -136,33 +136,22 @@
 JAVACFLAGS  += $(OTHER_JAVACFLAGS)
 
 # Needed for javah
-JAVAHFLAGS += -bootclasspath $(CLASSBINDIR)
+JAVAHFLAGS += -bootclasspath $(CLASSBINDIR):$(ICEDTEA_RT):$(ICEDTEA_JCE):$(CLASSDESTDIR)
 
 # Needed for JAVADOC and BOOT_JAVACFLAGS
 NO_PROPRIETARY_API_WARNINGS = -XDignore.symbol.file=true
 
 # Langtools
 ifdef LANGTOOLS_DIST
-  JAVAC_JAR   = $(LANGTOOLS_DIST)/bootstrap/lib/javac.jar
-  JAVAH_JAR   = $(LANGTOOLS_DIST)/bootstrap/lib/javah.jar
   JAVADOC_JAR = $(LANGTOOLS_DIST)/bootstrap/lib/javadoc.jar
   DOCLETS_JAR = $(LANGTOOLS_DIST)/bootstrap/lib/doclets.jar
-  JAVAC_CMD   = $(BOOT_JAVA_CMD) \
-		"-Xbootclasspath/p:$(JAVAC_JAR)" \
-		-jar $(JAVAC_JAR) $(JAVACFLAGS)
-  JAVAH_CMD   = $(BOOT_JAVA_CMD) \
-		"-Xbootclasspath/p:$(JAVAH_JAR)$(CLASSPATH_SEPARATOR)$(JAVADOC_JAR)$(CLASSPATH_SEPARATOR)$(JAVAC_JAR)"  \
-		-jar $(JAVAH_JAR) $(JAVAHFLAGS)
   JAVADOC_CMD = $(BOOT_JAVA_CMD) \
 		"-Xbootclasspath/p:$(JAVADOC_JAR)$(CLASSPATH_SEPARATOR)$(JAVAC_JAR)$(CLASSPATH_SEPARATOR)$(DOCLETS_JAR)" \
 		-jar $(JAVADOC_JAR)
-else
-  # If no explicit tools, use boot tools (add VM flags in this case)
   JAVAC_CMD     = $(JAVA_TOOLS_DIR)/javac $(JAVAC_JVM_FLAGS) \
 		  $(JAVACFLAGS)
   JAVAH_CMD     = $(JAVA_TOOLS_DIR)/javah \
 		  $(JAVAHFLAGS)
-  JAVADOC_CMD   = $(JAVA_TOOLS_DIR)/javadoc $(JAVA_TOOLS_FLAGS:%=-J%)
 endif
 
 # Override of what javac to use (see deploy workspace)
diff -Nru openjdk-ecj.orig/jdk/make/java/nio/Makefile openjdk-ecj/jdk/make/java/nio/Makefile
--- openjdk-ecj.orig/jdk/make/java/nio/Makefile	2009-07-01 13:42:19.000000000 +0100
+++ openjdk-ecj/jdk/make/java/nio/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -31,7 +31,7 @@
 PACKAGE = java.nio
 LIBRARY = nio
 PRODUCT = java
-OTHER_JAVACFLAGS += -Xmaxwarns 1000 -Xlint:serial -Werror
+OTHER_JAVACFLAGS += -Xlint:serial -Werror
 include $(BUILDDIR)/common/Defs.gmk
 
 NIO_SRC = $(SHARE_SRC)/classes/java/nio
diff -Nru openjdk-ecj.orig/jdk/make/java/text/Makefile openjdk-ecj/jdk/make/java/text/Makefile
--- openjdk-ecj.orig/jdk/make/java/text/Makefile	2009-05-08 16:10:43.000000000 +0100
+++ openjdk-ecj/jdk/make/java/text/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -81,8 +81,8 @@
 		-sourcepath $(TEXT_SRCDIR) \
 		$(TEXT_SOURCES)
 	$(MKDIR) -p  $(TEXT_CLASSDIR)
-	$(BOOT_JAVA_CMD) -Xbootclasspath/p:$(TEXT_CLASSES) \
-		-jar $(GENERATEBREAKITERATORDATA_JARFILE) \
+	$(BOOT_JAVA_CMD) -cp $(TEXT_CLASSES):$(GENERATEBREAKITERATORDATA_JARFILE):$(ICEDTEA_CLS_DIR) \
+		build.tools.generatebreakiteratordata.GenerateBreakIteratorData \
 		-o $(TEXT_CLASSDIR) \
 		-spec $(UNICODEDATA)/UnicodeData.txt
 	@$(java-vm-cleanup)
diff -Nru openjdk-ecj.orig/jdk/make/Makefile openjdk-ecj/jdk/make/Makefile
--- openjdk-ecj.orig/jdk/make/Makefile	2009-05-08 16:10:43.000000000 +0100
+++ openjdk-ecj/jdk/make/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -239,7 +239,7 @@
 
 all build:: sanity-all post-sanity-all
 
-SUBDIRS    = tools java javax org sun sunw com jpda mkdemo mksample launchers
+SUBDIRS    = tools java javax org sun sunw com jpda mksample launchers
 all build::
 	$(SUBDIRS-loop)
 
diff -Nru openjdk-ecj.orig/jdk/make/sun/awt/FILES_export_unix.gmk openjdk-ecj/jdk/make/sun/awt/FILES_export_unix.gmk
--- openjdk-ecj.orig/jdk/make/sun/awt/FILES_export_unix.gmk	2009-05-08 16:10:44.000000000 +0100
+++ openjdk-ecj/jdk/make/sun/awt/FILES_export_unix.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -189,3 +189,5 @@
 	java/awt/dnd/DnDConstants.java \
 	sun/awt/CausedFocusEvent.java
 
+EXPORTED_inner = \
+    sun.java2d.opengl.OGLContext$$OGLContextCaps
diff -Nru openjdk-ecj.orig/jdk/make/sun/awt/Makefile openjdk-ecj/jdk/make/sun/awt/Makefile
--- openjdk-ecj.orig/jdk/make/sun/awt/Makefile	2009-05-08 16:10:44.000000000 +0100
+++ openjdk-ecj/jdk/make/sun/awt/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -401,10 +401,9 @@
 COMPILEFONTCONFIG_JARFILE = $(BUILDTOOLJARDIR)/compilefontconfig.jar
 
 $(LIBDIR)/%.bfc: $(FONTCONFIGS_SRC)/$(FONTCONFIGS_SRC_PREFIX)%.properties \
-    $(COMPILEFONTCONFIG_JARFILE)
-	$(prep-target)
-	$(BOOT_JAVA_CMD) -jar $(COMPILEFONTCONFIG_JARFILE) $< $@
-	$(CHMOD) 444 $(@)
+	$(COMPILEFONTCONFIG_JARFILE)
+	$(CP) -f $(GENSRCDIR)/fontconfig/* $(LIBDIR)
+	$(CHMOD) 444 $(LIBDIR)/*.bfc
 	@$(java-vm-cleanup)
 
 fontconfigs.clean :
diff -Nru openjdk-ecj.orig/jdk/make/sun/javazic/Makefile openjdk-ecj/jdk/make/sun/javazic/Makefile
--- openjdk-ecj.orig/jdk/make/sun/javazic/Makefile	2009-03-30 17:23:03.000000000 +0100
+++ openjdk-ecj/jdk/make/sun/javazic/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -62,7 +62,8 @@
 $(WORKDIR)/$(MAPFILE): $(BUILDTOOLJARDIR)/javazic.jar $(TZFILES)
 	$(RM) -r $(@D)
 	$(prep-target)
-	$(BOOT_JAVA_CMD) -jar $(BUILDTOOLJARDIR)/javazic.jar -V "$(TZDATA_VER)" -d $(WORKDIR) $(TZFILES)
+	$(BOOT_JAVA_CMD) -cp $(ICEDTEA_CLS_DIR):$(BUILDTOOLJARDIR)/javazic.jar \
+		build.tools.javazic.Main -V "$(TZDATA_VER)" -d $(WORKDIR) $(TZFILES)
 	@$(java-vm-cleanup)
 
 $(INSTALLDIR)/$(MAPFILE): $(WORKDIR)/$(MAPFILE)
diff -Nru openjdk-ecj.orig/jdk/make/sun/text/Makefile openjdk-ecj/jdk/make/sun/text/Makefile
--- openjdk-ecj.orig/jdk/make/sun/text/Makefile	2009-03-30 17:23:03.000000000 +0100
+++ openjdk-ecj/jdk/make/sun/text/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -85,8 +85,9 @@
 	$(BOOT_JAVAC_CMD) -d $(TEXT_CLASSES) \
 		-sourcepath $(TEXT_SRCDIR) \
 		$(BIRULES) $(BIINFO)
-	$(BOOT_JAVA_CMD) -Xbootclasspath/p:$(TEXT_CLASSES) \
-		-jar $(GENERATEBREAKITERATORDATA_JARFILE) \
+	$(BOOT_JAVA_CMD)  \
+		-cp $(TEXT_CLASSES):$(ICEDTEA_CLS_DIR):$(GENERATEBREAKITERATORDATA_JARFILE) \
+		build.tools.generatebreakiteratordata.GenerateBreakIteratorData \
 		-o $(CLASSDESTDIR)/sun/text/resources \
 		-spec $(UNICODEDATA)/UnicodeData.txt \
 		-language th
diff -Nru openjdk-ecj.orig/jdk/make/sun/xawt/Makefile openjdk-ecj/jdk/make/sun/xawt/Makefile
--- openjdk-ecj.orig/jdk/make/sun/xawt/Makefile	2009-07-01 13:42:21.000000000 +0100
+++ openjdk-ecj/jdk/make/sun/xawt/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -294,11 +294,7 @@
 
 TEMPDIR_CLASSES = $(TEMPDIR)/classes
 
-$(TEMPDIR_CLASSES)/sun/awt/X11/ToBin.class: ToBin.java
-	@$(prep-target)
-	$(BOOT_JAVAC_CMD) -d $(TEMPDIR_CLASSES) $<
-
-$(TEMPDIR)/.gen_icons: $(TEMPDIR_CLASSES)/sun/awt/X11/ToBin.class $(ICONS)
+$(TEMPDIR)/.gen_icons: $(ICONS)
 	$(prep-target)
 	for i in $(ICONS); do \
             filename=`basename $$i`; \
@@ -308,20 +304,14 @@
 	    $(ECHO) "package sun.awt.X11;" >> $$classname ; \
 	    $(ECHO) "public class XAWTIcon32_$$name {" >> $$classname; \
 	    $(ECHO) "public static int[] $$name = { " >> $$classname;  \
-	    $(CAT) $$i | \
-	      $(BOOT_JAVA_CMD) -cp $(TEMPDIR_CLASSES)  \
-		-Djava.awt.headless=true \
-		sun.awt.X11.ToBin >> $$classname; \
+	    $(ECHO) "0,0" >> $$classname ;  \
 	    $(ECHO) "}; }" >> $$classname;  \
             classname=$(GEN_DIR)/XAWTIcon64_$$name.java; \
 	    $(RM) $$classname; \
 	    $(ECHO) "package sun.awt.X11;" >> $$classname ; \
 	    $(ECHO) "public class XAWTIcon64_$$name {" >> $$classname; \
 	    $(ECHO) "public static long[] $$name = { " >> $$classname;  \
-	    $(CAT) $$i | \
-	      $(BOOT_JAVA_CMD) -cp $(TEMPDIR_CLASSES)  \
-		-Djava.awt.headless=true \
-		sun.awt.X11.ToBin >> $$classname; \
+	    $(ECHO) "0,0" >> $$classname ;  \
 	    $(ECHO) "}; }" >> $$classname;  \
 	done
 	$(TOUCH) $@
diff -Nru openjdk-ecj.orig/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java openjdk-ecj/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java
--- openjdk-ecj.orig/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java	2009-07-01 13:41:38.000000000 +0100
+++ openjdk-ecj/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java	2009-07-01 13:52:45.000000000 +0100
@@ -647,9 +647,6 @@
             throws FileNotFoundException, IOException {
         BufferedReader in = new BufferedReader(new FileReader(theTemplateFileName));
         PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(theOutputFileName)));
-        out.println(commentStart +
-            " This file was generated AUTOMATICALLY from a template file " +
-            new java.util.Date() + commentEnd);
         int marklen = commandMarker.length();
         LOOP: while(true) {
             try {
@@ -876,7 +873,6 @@
         // liu : Add a comment showing the source of this table
         result.append(commentStart + " The following tables and code generated using:" +
                   commentEnd + "\n  ");
-        result.append(commentStart + ' ' + commandLineDescription + commentEnd + "\n  ");
 
                 if (plane == 0 && bLatin1 == false) {
             genCaseMapTableDeclaration(result);
diff -Nru openjdk-ecj.orig/jdk/src/share/classes/java/lang/Double.java openjdk-ecj/jdk/src/share/classes/java/lang/Double.java
--- openjdk-ecj.orig/jdk/src/share/classes/java/lang/Double.java	2009-07-01 13:41:25.000000000 +0100
+++ openjdk-ecj/jdk/src/share/classes/java/lang/Double.java	2009-07-01 13:52:45.000000000 +0100
@@ -76,7 +76,7 @@
      * {@code 0x1.fffffffffffffP+1023} and also equal to
      * {@code Double.longBitsToDouble(0x7fefffffffffffffL)}.
      */
-    public static final double MAX_VALUE = 0x1.fffffffffffffP+1023; // 1.7976931348623157e+308
+    public static final double MAX_VALUE = 1.7976931348623157e+308;
 
     /**
      * A constant holding the smallest positive normal value of type
@@ -86,7 +86,7 @@
      *
      * @since 1.6
      */
-    public static final double MIN_NORMAL = 0x1.0p-1022; // 2.2250738585072014E-308
+    public static final double MIN_NORMAL = 2.2250738585072014E-308;
 
     /**
      * A constant holding the smallest positive nonzero value of type
@@ -95,7 +95,7 @@
      * {@code 0x0.0000000000001P-1022} and also equal to
      * {@code Double.longBitsToDouble(0x1L)}.
      */
-    public static final double MIN_VALUE = 0x0.0000000000001P-1022; // 4.9e-324
+    public static final double MIN_VALUE = 4.9e-324;
 
     /**
      * Maximum exponent a finite {@code double} variable may have.
diff -Nru openjdk-ecj.orig/jdk/src/share/classes/java/lang/Float.java openjdk-ecj/jdk/src/share/classes/java/lang/Float.java
--- openjdk-ecj.orig/jdk/src/share/classes/java/lang/Float.java	2009-07-01 13:41:26.000000000 +0100
+++ openjdk-ecj/jdk/src/share/classes/java/lang/Float.java	2009-07-01 13:52:45.000000000 +0100
@@ -76,7 +76,7 @@
      * {@code 0x1.fffffeP+127f} and also equal to
      * {@code Float.intBitsToFloat(0x7f7fffff)}.
      */
-    public static final float MAX_VALUE = 0x1.fffffeP+127f; // 3.4028235e+38f
+    public static final float MAX_VALUE = 3.4028235e+38f;
 
     /**
      * A constant holding the smallest positive normal value of type
@@ -86,7 +86,7 @@
      *
      * @since 1.6
      */
-    public static final float MIN_NORMAL = 0x1.0p-126f; // 1.17549435E-38f
+    public static final float MIN_NORMAL = 1.17549435E-38f;
 
     /**
      * A constant holding the smallest positive nonzero value of type
@@ -94,7 +94,7 @@
      * hexadecimal floating-point literal {@code 0x0.000002P-126f}
      * and also equal to {@code Float.intBitsToFloat(0x1)}.
      */
-    public static final float MIN_VALUE = 0x0.000002P-126f; // 1.4e-45f
+    public static final float MIN_VALUE = 1.4e-45f;
 
     /**
      * Maximum exponent a finite {@code float} variable may have.  It
diff -Nru openjdk-ecj.orig/jdk/src/share/native/sun/java2d/opengl/OGLContext.h openjdk-ecj/jdk/src/share/native/sun/java2d/opengl/OGLContext.h
--- openjdk-ecj.orig/jdk/src/share/native/sun/java2d/opengl/OGLContext.h	2009-03-30 17:23:07.000000000 +0100
+++ openjdk-ecj/jdk/src/share/native/sun/java2d/opengl/OGLContext.h	2009-07-01 13:52:45.000000000 +0100
@@ -27,6 +27,7 @@
 #define OGLContext_h_Included
 
 #include "sun_java2d_pipe_BufferedContext.h"
+#include "sun_java2d_pipe_hw_ContextCapabilities.h"
 #include "sun_java2d_opengl_OGLContext.h"
 #include "sun_java2d_opengl_OGLContext_OGLContextCaps.h"
 
@@ -100,39 +101,39 @@
  * See OGLContext.java for more on these flags.
  */
 #define CAPS_EMPTY           \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EMPTY
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_EMPTY
 #define CAPS_RT_PLAIN_ALPHA  \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_RT_PLAIN_ALPHA
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_RT_PLAIN_ALPHA
 #define CAPS_RT_TEXTURE_ALPHA       \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_RT_TEXTURE_ALPHA
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_RT_TEXTURE_ALPHA
 #define CAPS_RT_TEXTURE_OPAQUE      \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_RT_TEXTURE_OPAQUE
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_RT_TEXTURE_OPAQUE
 #define CAPS_MULTITEXTURE    \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_MULTITEXTURE
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_MULTITEXTURE
 #define CAPS_TEXNONPOW2      \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_TEXNONPOW2
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_TEXNONPOW2
 #define CAPS_TEXNONSQUARE    \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_TEXNONSQUARE
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_TEXNONSQUARE
 #define CAPS_PS20            \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_PS20
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_PS20
 #define CAPS_PS30            \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_PS30
+    sun_java2d_pipe_hw_ContextCapabilities_CAPS_PS30
 #define LAST_SHARED_CAP      \
     sun_java2d_opengl_OGLContext_OGLContextCaps_LAST_SHARED_CAP
 #define CAPS_EXT_FBOBJECT    \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EXT_FBOBJECT
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_EXT_FBOBJECT
 #define CAPS_STORED_ALPHA    \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_STORED_ALPHA
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_STORED_ALPHA
 #define CAPS_DOUBLEBUFFERED  \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_DOUBLEBUFFERED
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_DOUBLEBUFFERED
 #define CAPS_EXT_LCD_SHADER  \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EXT_LCD_SHADER
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_EXT_LCD_SHADER
 #define CAPS_EXT_BIOP_SHADER \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EXT_BIOP_SHADER
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_EXT_BIOP_SHADER
 #define CAPS_EXT_GRAD_SHADER \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EXT_GRAD_SHADER
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_EXT_GRAD_SHADER
 #define CAPS_EXT_TEXRECT     \
-    sun_java2d_opengl_OGLContext_OGLContextCaps_CAPS_EXT_TEXRECT
+    sun_java2d_opengl_OGLContext_00024OGLContextCaps_CAPS_EXT_TEXRECT
 
 /**
  * Evaluates to true if the given capability bitmask is present for the
diff -Nru openjdk-ecj.orig/langtools/make/build.properties openjdk-ecj/langtools/make/build.properties
--- openjdk-ecj.orig/langtools/make/build.properties	2009-07-01 13:54:20.000000000 +0100
+++ openjdk-ecj/langtools/make/build.properties	2009-07-01 13:54:36.000000000 +0100
@@ -32,8 +32,8 @@
 # boot.java.home = /opt/jdk/1.5.0 
 boot.java = ${boot.java.home}/bin/java
 boot.javac = ${boot.java.home}/bin/javac
-boot.javac.source = 6
-boot.javac.target = 6
+boot.javac.source = 5
+boot.javac.target = 5
 
 # This is the JDK used to run the product version of the tools,
 # for example, for testing. If you're building a complete JDK, specify that.
diff -Nru openjdk-ecj.orig/langtools/make/build.xml openjdk-ecj/langtools/make/build.xml
--- openjdk-ecj.orig/langtools/make/build.xml	2009-06-30 14:25:18.000000000 +0100
+++ openjdk-ecj/langtools/make/build.xml	2009-07-01 13:53:47.000000000 +0100
@@ -516,6 +516,7 @@
                        includeAntRuntime="no"
                        source="@{javac.source}"
                        target="@{javac.target}">
+		    <compilerarg line="-bootclasspath @{classes.dir}:../../generated:${boot.java.home}/lib/tools.jar:${boot.java.home}/jre/lib/rt.jar:${boot.java.home}/jre/lib/rt-system.jar"/>
                     <compilerarg value="-J-Xbootclasspath/p:@{javac.bootclasspath}"/>
                     <compilerarg line="${javac.version.opt}"/>
                     <compilerarg line="-Xlint"/>
@@ -532,6 +533,7 @@
                        target="@{javac.target}"
                        debug="${javac.debug}" 
                        debuglevel="${javac.debuglevel}">
+		    <compilerarg line="-bootclasspath @{classes.dir}:../../generated:${boot.java.home}/lib/tools.jar:${boot.java.home}/jre/lib/rt.jar:${boot.java.home}/jre/lib/rt-system.jar"/>
                     <compilerarg value="-J-Xbootclasspath/p:@{javac.bootclasspath}"/>
                     <compilerarg value="-Xbootclasspath/p:@{classes.dir}"/>
                     <compilerarg line="${javac.no.jdk.warnings}"/>
diff -Nru openjdk-ecj.orig/langtools/make/Makefile openjdk-ecj/langtools/make/Makefile
--- openjdk-ecj.orig/langtools/make/Makefile	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/langtools/make/Makefile	2009-07-01 13:52:45.000000000 +0100
@@ -130,7 +130,7 @@
 
 ifdef ALT_BOOTDIR
   ANT_OPTIONS += -Dboot.java.home=$(ALT_BOOTDIR)
-  ANT_JAVA_HOME = JAVA_HOME=$(ALT_BOOTDIR)
+  ANT_OPTIONS += -Djavac.executable=$(ALT_BOOTDIR)/bin/javac
 endif
 
 ifdef ALT_OUTPUTDIR
diff -Nru openjdk-ecj.orig/make/jdk-rules.gmk openjdk-ecj/make/jdk-rules.gmk
--- openjdk-ecj.orig/make/jdk-rules.gmk	2009-07-01 13:42:16.000000000 +0100
+++ openjdk-ecj/make/jdk-rules.gmk	2009-07-01 13:52:45.000000000 +0100
@@ -58,7 +58,7 @@
 endif
 
 ifndef DEV_ONLY
-  JDK_BUILD_TARGETS = sanity all $(DOCS_TARGET) images
+  JDK_BUILD_TARGETS = sanity all images
 else
   JDK_BUILD_TARGETS = sanity all $(IMAGES_TARGET)
 endif
