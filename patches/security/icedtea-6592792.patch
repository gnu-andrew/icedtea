diff -Nru openjdk.orig/jdk/src/share/lib/security/java.security openjdk/jdk/src/share/lib/security/java.security
--- openjdk.orig/jdk/src/share/lib/security/java.security	2009-03-30 17:23:07.000000000 +0100
+++ openjdk/jdk/src/share/lib/security/java.security	2009-05-12 23:41:24.000000000 +0100
@@ -127,7 +127,7 @@
 # passed to checkPackageAccess unless the
 # corresponding RuntimePermission ("accessClassInPackage."+package) has
 # been granted.
-package.access=sun.
+package.access=sun.,com.sun.xml.internal.ws.,com.sun.xml.internal.bind.
 
 #
 # List of comma-separated packages that start with or equal this string
diff -Nru openjdk.orig/jdk/src/share/lib/security/java.security-solaris openjdk/jdk/src/share/lib/security/java.security-solaris
--- openjdk.orig/jdk/src/share/lib/security/java.security-solaris	2009-03-30 17:23:07.000000000 +0100
+++ openjdk/jdk/src/share/lib/security/java.security-solaris	2009-05-12 23:41:24.000000000 +0100
@@ -128,7 +128,7 @@
 # passed to checkPackageAccess unless the
 # corresponding RuntimePermission ("accessClassInPackage."+package) has
 # been granted.
-package.access=sun.
+package.access=sun.,com.sun.xml.internal.ws.,com.sun.xml.internal.bind.
 
 #
 # List of comma-separated packages that start with or equal this string
diff -Nru openjdk.orig/jdk/src/share/lib/security/java.security-windows openjdk/jdk/src/share/lib/security/java.security-windows
--- openjdk.orig/jdk/src/share/lib/security/java.security-windows	2009-03-30 17:23:07.000000000 +0100
+++ openjdk/jdk/src/share/lib/security/java.security-windows	2009-05-12 23:41:24.000000000 +0100
@@ -128,7 +128,7 @@
 # passed to checkPackageAccess unless the
 # corresponding RuntimePermission ("accessClassInPackage."+package) has
 # been granted.
-package.access=sun.
+package.access=sun.,com.sun.xml.internal.ws.,com.sun.xml.internal.bind.
 
 #
 # List of comma-separated packages that start with or equal this string
diff -Nru openjdk.orig/jdk/test/com/sun/org/apache/xml/internal/ws/server/Test.java openjdk/jdk/test/com/sun/org/apache/xml/internal/ws/server/Test.java
--- openjdk.orig/jdk/test/com/sun/org/apache/xml/internal/ws/server/Test.java	1970-01-01 01:00:00.000000000 +0100
+++ openjdk/jdk/test/com/sun/org/apache/xml/internal/ws/server/Test.java	2009-05-12 23:41:24.000000000 +0100
@@ -0,0 +1,65 @@
+/*
+ *  @test
+ *  @bug 6592792
+ *  @summary Add com.sun.xml.internal to the "package.access" property in $JAVA_HOME/lib/security/java.security
+ *  @run shell Test6592792.sh
+ */
+
+import java.lang.*;
+import java.lang.reflect.*;
+import com.sun.xml.internal.ws.server.*;
+import com.sun.xml.internal.ws.server.SingletonResolver;
+import com.sun.xml.internal.ws.api.server.*;
+
+public class Test {
+
+  public static void main(String[] args) throws Exception{
+      // Enable the security manager
+      SecurityManager sm = new SecurityManager();
+      System.setSecurityManager(sm);
+      new Test();
+  }
+
+  Object invokeMethod(Object target,Method m,Object args[]) throws Exception {
+      SingletonResolver r = new SingletonResolver(target);
+      Invoker invoker = r.createInvoker();
+      return invoker.invoke(null, m, args);
+  }
+
+  public Test() throws Exception{
+      try {
+          Class c=Class.forName("java.lang.Class");
+
+          Class ctab[]=new Class[1];
+          ctab[0]=Class.forName("java.lang.String");
+          Method forName=c.getMethod("forName",ctab);
+
+          Class gtab[]=new Class[2];
+          gtab[0]=Class.forName("java.lang.String");
+          gtab[1]=Class[].class;
+          Method getMethod=c.getMethod("getMethod",gtab);
+
+          Method newInstance=c.getMethod("newInstance",(Class[])null);
+
+          Object otab[]=new Object[1];
+          otab[0]="sun.misc.Unsafe";
+
+          Object o=invokeMethod(null,forName,otab);
+          c = (Class)o;		// sun.misc.Unsafe class
+          // Test FAILED: Should n't have got the reference.   
+          throw new RuntimeException("Test Failed: Got reference to: "+o);
+
+
+          //o=invokeMethod(c,getMethod, new Object[]{"getUnsafe", (Class[])null});
+          //System.out.println("Got reference to: "+o);
+          //throw new RuntimeException("Got reference to: "+o);
+          //o=invokeMethod(c,(Method)o,null);
+          //System.out.println("Got reference to: "+o);
+          //throw new RuntimeException("Got reference to: "+o);
+   
+      } catch(java.security.AccessControlException e) {
+          System.out.println("Test passed");
+          //e.printStackTrace();
+      } 
+   }
+}
