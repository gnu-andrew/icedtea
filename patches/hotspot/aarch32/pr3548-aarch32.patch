diff --git openjdk.orig/hotspot/src/cpu/aarch32/vm/c1_LIRAssembler_aarch32.cpp openjdk/hotspot/src/cpu/aarch32/vm/c1_LIRAssembler_aarch32.cpp
--- openjdk.orig/hotspot/src/cpu/aarch32/vm/c1_LIRAssembler_aarch32.cpp
+++ openjdk/hotspot/src/cpu/aarch32/vm/c1_LIRAssembler_aarch32.cpp
@@ -158,16 +158,19 @@
 Address LIR_Assembler::as_Address(LIR_Address* addr) {
   // as_Address(LIR_Address*, Address::InsnDataType) should be used instead
   ShouldNotCallThis();
+  return Address();
 }
 
 Address LIR_Assembler::as_Address_hi(LIR_Address* addr) {
   // as_Address_hi(LIR_Address*, Address::InsnDataType) should be used instead
   ShouldNotCallThis();
+  return Address();
 }
 
 Address LIR_Assembler::as_Address_lo(LIR_Address* addr) {
   // as_Address_lo(LIR_Address*, Address::InsnDataType) should be used instead
   ShouldNotCallThis();
+  return Address();
 }
 
 Address LIR_Assembler::as_Address(LIR_Address* addr, Register tmp, Address::InsnDataType type) {
diff --git openjdk.orig/hotspot/src/cpu/aarch32/vm/relocInfo_aarch32.cpp openjdk/hotspot/src/cpu/aarch32/vm/relocInfo_aarch32.cpp
--- openjdk.orig/hotspot/src/cpu/aarch32/vm/relocInfo_aarch32.cpp
+++ openjdk/hotspot/src/cpu/aarch32/vm/relocInfo_aarch32.cpp
@@ -87,6 +87,7 @@
   }
 
   ShouldNotReachHere();
+  return NULL;
 }
 
 void Relocation::pd_set_call_destination(address x) {
