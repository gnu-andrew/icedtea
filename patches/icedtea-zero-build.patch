diff -Nru openjdk.orig/corba/make/common/Defs-linux.gmk openjdk/corba/make/common/Defs-linux.gmk
--- openjdk.orig/corba/make/common/Defs-linux.gmk	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/corba/make/common/Defs-linux.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -99,8 +99,13 @@
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
 CFLAGS_REQUIRED_sparc   += -m32 -mcpu=v9
 LDFLAGS_COMMON_sparc    += -m32 -mcpu=v9
-CFLAGS_REQUIRED         =  $(CFLAGS_REQUIRED_$(ARCH))
-LDFLAGS_COMMON          += $(LDFLAGS_COMMON_$(ARCH))
+ifdef ICEDTEA_ZERO_BUILD
+  CFLAGS_REQUIRED       =  $(ZERO_ARCHFLAG)
+  LDFLAGS_COMMON        += $(ZERO_ARCHFLAG)
+else
+  CFLAGS_REQUIRED       =  $(CFLAGS_REQUIRED_$(ARCH))
+  LDFLAGS_COMMON        += $(LDFLAGS_COMMON_$(ARCH))
+endif
 
 # Add in platform specific optimizations for all opt levels
 CC_HIGHEST_OPT += $(_OPT_$(ARCH))
diff -Nru openjdk.orig/corba/make/common/shared/Compiler-gcc.gmk openjdk/corba/make/common/shared/Compiler-gcc.gmk
--- openjdk.orig/corba/make/common/shared/Compiler-gcc.gmk	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/corba/make/common/shared/Compiler-gcc.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -70,6 +70,11 @@
   else
     CXX            = $(COMPILER_PATH)g++$(GCC_SUFFIX)
   endif
+  ifdef ICEDTEA_ZERO_BUILD
+    # zero
+    REQUIRED_CC_VER = 3.2
+    REQUIRED_GCC_VER = 3.2.*
+  else
   ifneq ("$(findstring sparc,$(ARCH))", "")
     # sparc or sparcv9
     REQUIRED_CC_VER = 4.0
@@ -93,6 +98,7 @@
   endif
   endif
   endif
+  endif
   # Option used to create a shared library
   SHARED_LIBRARY_FLAG = -shared -mimpure-text
   SUN_COMP_VER := $(shell $(CC) --verbose 2>&1 )
diff -Nru openjdk.orig/corba/make/common/shared/Platform.gmk openjdk/corba/make/common/shared/Platform.gmk
--- openjdk.orig/corba/make/common/shared/Platform.gmk	2008-08-14 08:39:29.000000000 +0100
+++ openjdk/corba/make/common/shared/Platform.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -202,6 +202,11 @@
   ARCH_FAMILY := $(ARCH)
 
   # Linux builds may be 32-bit or 64-bit data model.
+  ifdef ICEDTEA_ZERO_BUILD
+    ifndef ARCH_DATA_MODEL
+      ARCH_DATA_MODEL = $(ZERO_BITSPERWORD)
+    endif
+  endif
   ifeq ($(ARCH), sparc)
     # Linux sparc build can be either 32-bit or 64-bit.
     #   Default to 32, but allow explicit setting to 32 or 64.
diff -Nru openjdk.orig/hotspot/make/defs.make openjdk/hotspot/make/defs.make
--- openjdk.orig/hotspot/make/defs.make	2008-08-14 08:40:05.000000000 +0100
+++ openjdk/hotspot/make/defs.make	2008-08-20 23:33:49.000000000 +0100
@@ -192,13 +192,14 @@
 
   # Use uname output for SRCARCH, but deal with platform differences. If ARCH
   # is not explicitly listed below, it is treated as x86. 
-  SRCARCH     = $(ARCH/$(filter sparc sparc64 ia64 amd64 x86_64,$(ARCH)))
+  SRCARCH     = $(ARCH/$(filter sparc sparc64 ia64 amd64 x86_64 zero,$(ARCH)))
   ARCH/       = x86
   ARCH/sparc  = sparc
   ARCH/sparc64= sparc
   ARCH/ia64   = ia64
   ARCH/amd64  = x86
   ARCH/x86_64 = x86
+  ARCH/zero   = zero
 
   # BUILDARCH is usually the same as SRCARCH, except for sparcv9
   BUILDARCH = $(SRCARCH)
@@ -222,8 +223,9 @@
   LIBARCH/sparc   = sparc
   LIBARCH/sparcv9 = sparcv9
   LIBARCH/ia64    = ia64
+  LIBARCH/zero    = $(ZERO_LIBARCH)
 
-  LP64_ARCH = sparcv9 amd64 ia64
+  LP64_ARCH = sparcv9 amd64 ia64 zero
 endif
 
 # Required make macro settings for all platforms
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/buildtree.make openjdk/hotspot/make/linux/makefiles/buildtree.make
--- openjdk.orig/hotspot/make/linux/makefiles/buildtree.make	2008-08-14 08:40:05.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/buildtree.make	2008-08-20 23:33:49.000000000 +0100
@@ -321,6 +321,7 @@
 DATA_MODE/sparcv9 = 64
 DATA_MODE/amd64   = 64
 DATA_MODE/ia64    = 64
+DATA_MODE/zero    = $(ZERO_BITSPERWORD)
 
 JAVA_FLAG/32 = -d32
 JAVA_FLAG/64 = -d64
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/defs.make openjdk/hotspot/make/linux/makefiles/defs.make
--- openjdk.orig/hotspot/make/linux/makefiles/defs.make	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/defs.make	2008-08-20 23:33:49.000000000 +0100
@@ -37,6 +37,18 @@
   ARCH_DATA_MODEL ?= 32
 endif
 
+# zero
+ifdef ICEDTEA_ZERO_BUILD
+  ARCH_DATA_MODEL  = $(ZERO_BITSPERWORD)
+  ifeq ($(ARCH_DATA_MODEL), 64)
+    MAKE_ARGS      += LP64=1
+  endif
+  PLATFORM         = linux-zero
+  VM_PLATFORM      = linux_zero
+  HS_ARCH          = zero
+  ARCH             = zero
+endif
+
 # ia64
 ifeq ($(ARCH), ia64)
   ARCH_DATA_MODEL = 64
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/gcc.make openjdk/hotspot/make/linux/makefiles/gcc.make
--- openjdk.orig/hotspot/make/linux/makefiles/gcc.make	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/gcc.make	2008-08-20 23:33:49.000000000 +0100
@@ -56,6 +56,9 @@
 VM_PICFLAG/AOUT   =
 VM_PICFLAG        = $(VM_PICFLAG/$(LINK_INTO))
 
+ifdef ICEDTEA_ZERO_BUILD
+CFLAGS += $(LIBFFI_CFLAGS)
+endif
 CFLAGS += $(VM_PICFLAG)
 CFLAGS += -fno-rtti
 CFLAGS += -fno-exceptions
@@ -72,6 +75,7 @@
 ARCHFLAG/ia64    =
 ARCHFLAG/sparc   = -m32 -mcpu=v9
 ARCHFLAG/sparcv9 = -m64 -mcpu=v9
+ARCHFLAG/zero    = $(ZERO_ARCHFLAG)
 
 CFLAGS     += $(ARCHFLAG)
 AOUT_FLAGS += $(ARCHFLAG)
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/sa.make openjdk/hotspot/make/linux/makefiles/sa.make
--- openjdk.orig/hotspot/make/linux/makefiles/sa.make	2008-08-14 08:40:05.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/sa.make	2008-08-20 23:33:49.000000000 +0100
@@ -51,10 +51,10 @@
 SA_PROPERTIES = $(SA_CLASSDIR)/sa.properties
 
 # if $(AGENT_DIR) does not exist, we don't build SA
-# also, we don't build SA on Itanium.
+# also, we don't build SA on Itanium or zero.
 
 all: 
-	if [ -d $(AGENT_DIR) -a "$(SRCARCH)" != "ia64" ] ; then \
+	if [ -d $(AGENT_DIR) -a "$(SRCARCH)" != "ia64" -a "$(SRCARCH)" != "zero" ] ; then \
 	   $(MAKE) -f sa.make $(GENERATED)/sa-jdi.jar; \
 	fi
 
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/saproc.make openjdk/hotspot/make/linux/makefiles/saproc.make
--- openjdk.orig/hotspot/make/linux/makefiles/saproc.make	2008-08-14 08:40:05.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/saproc.make	2008-08-20 23:33:49.000000000 +0100
@@ -44,10 +44,10 @@
 DEST_SAPROC = $(JDK_LIBDIR)/$(LIBSAPROC)
 
 # if $(AGENT_DIR) does not exist, we don't build SA
-# also, we don't build SA on Itanium.
+# also, we don't build SA on Itanium or zero.
 
 checkAndBuildSA:
-	$(QUIETLY) if [ -d $(AGENT_DIR) -a "$(SRCARCH)" != "ia64" ] ; then \
+	$(QUIETLY) if [ -d $(AGENT_DIR) -a "$(SRCARCH)" != "ia64" -a "$(SRCARCH)" != "zero" ] ; then \
 	   $(MAKE) -f vm.make $(LIBSAPROC); \
 	fi
 
diff -Nru openjdk.orig/hotspot/make/linux/makefiles/vm.make openjdk/hotspot/make/linux/makefiles/vm.make
--- openjdk.orig/hotspot/make/linux/makefiles/vm.make	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/hotspot/make/linux/makefiles/vm.make	2008-08-20 23:33:49.000000000 +0100
@@ -154,6 +154,9 @@
 
   LIBS_VM                  += $(LIBS)
 endif
+ifdef ICEDTEA_ZERO_BUILD
+LIBS_VM += $(LIBFFI_LIBS)
+endif
 
 LINK_VM = $(LINK_LIB.c)
 
diff -Nru openjdk.orig/hotspot/src/share/vm/runtime/vm_version.cpp openjdk/hotspot/src/share/vm/runtime/vm_version.cpp
--- openjdk.orig/hotspot/src/share/vm/runtime/vm_version.cpp	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/hotspot/src/share/vm/runtime/vm_version.cpp	2008-08-20 23:33:49.000000000 +0100
@@ -146,10 +146,14 @@
                  WINDOWS_ONLY("windows")         \
                  SOLARIS_ONLY("solaris")
 
+#ifdef ZERO_LIBARCH
+#define CPU      ZERO_LIBARCH
+#else
 #define CPU      IA32_ONLY("x86")                \
                  IA64_ONLY("ia64")               \
                  AMD64_ONLY("amd64")             \
                  SPARC_ONLY("sparc")
+#endif // ZERO_LIBARCH
 
 const char *Abstract_VM_Version::vm_platform_string() {
   return OS "-" CPU;
diff -Nru openjdk.orig/jdk/make/common/Defs-linux.gmk openjdk/jdk/make/common/Defs-linux.gmk
--- openjdk.orig/jdk/make/common/Defs-linux.gmk	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/jdk/make/common/Defs-linux.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -113,8 +113,13 @@
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
 CFLAGS_REQUIRED_sparc   += -m32 -mcpu=v9
 LDFLAGS_COMMON_sparc    += -m32 -mcpu=v9
-CFLAGS_REQUIRED         =  $(CFLAGS_REQUIRED_$(ARCH))
-LDFLAGS_COMMON          += $(LDFLAGS_COMMON_$(ARCH))
+ifdef ICEDTEA_ZERO_BUILD
+  CFLAGS_REQUIRED       =  $(ZERO_ARCHFLAG)
+  LDFLAGS_COMMON        += $(ZERO_ARCHFLAG)
+else
+  CFLAGS_REQUIRED       =  $(CFLAGS_REQUIRED_$(ARCH))
+  LDFLAGS_COMMON        += $(LDFLAGS_COMMON_$(ARCH))
+endif
 
 #
 # Selection of warning messages
diff -Nru openjdk.orig/jdk/make/common/shared/Compiler-gcc.gmk openjdk/jdk/make/common/shared/Compiler-gcc.gmk
--- openjdk.orig/jdk/make/common/shared/Compiler-gcc.gmk	2008-08-20 23:32:16.000000000 +0100
+++ openjdk/jdk/make/common/shared/Compiler-gcc.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -68,6 +68,11 @@
   else
     CXX            = $(COMPILER_PATH)g++$(GCC_SUFFIX)
   endif
+  ifdef ICEDTEA_ZERO_BUILD
+    # zero
+    REQUIRED_CC_VER = 3.2
+    REQUIRED_GCC_VER = 3.2.*
+  else
   ifneq ("$(findstring sparc,$(ARCH))", "")
     # sparc or sparcv9
     REQUIRED_CC_VER = 4.0
@@ -86,6 +91,7 @@
       endif
     endif
   endif
+  endif
   # Option used to create a shared library
   SHARED_LIBRARY_FLAG = -shared -mimpure-text
   SUN_COMP_VER := $(shell $(CC) --verbose 2>&1 )
diff -Nru openjdk.orig/jdk/make/common/shared/Platform.gmk openjdk/jdk/make/common/shared/Platform.gmk
--- openjdk.orig/jdk/make/common/shared/Platform.gmk	2008-08-14 08:42:49.000000000 +0100
+++ openjdk/jdk/make/common/shared/Platform.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -208,6 +208,11 @@
   ARCH_FAMILY := $(ARCH)
 
   # Linux builds may be 32-bit or 64-bit data model.
+  ifdef ICEDTEA_ZERO_BUILD
+    ifndef ARCH_DATA_MODEL
+      ARCH_DATA_MODEL = $(ZERO_BITSPERWORD)
+    endif
+  endif
   ifeq ($(ARCH), sparc)
     # Linux sparc build can be either 32-bit or 64-bit.
     #   Default to 32, but allow explicit setting to 32 or 64.
diff -Nru openjdk.orig/jdk/make/javax/sound/SoundDefs.gmk openjdk/jdk/make/javax/sound/SoundDefs.gmk
--- openjdk.orig/jdk/make/javax/sound/SoundDefs.gmk	2008-08-14 08:42:49.000000000 +0100
+++ openjdk/jdk/make/javax/sound/SoundDefs.gmk	2008-08-20 23:33:49.000000000 +0100
@@ -55,21 +55,25 @@
 
 endif # PLATFORM solaris
 
-ifeq ($(ARCH), i586)
-  CPPFLAGS += -DX_ARCH=X_I586
-endif # ARCH i586
-
-ifeq ($(ARCH), sparc)
-  CPPFLAGS += -DX_ARCH=X_SPARC
-endif # ARCH sparc
-
-ifeq ($(ARCH), sparcv9)
-  CPPFLAGS += -DX_ARCH=X_SPARCV9
-endif # ARCH sparcv9
-
-ifeq ($(ARCH), amd64)
-  CPPFLAGS += -DX_ARCH=X_AMD64
-endif # ARCH amd64
+ifdef ICEDTEA_ZERO_BUILD
+  CPPFLAGS += -DX_ARCH=X_ZERO
+else
+  ifeq ($(ARCH), i586)
+    CPPFLAGS += -DX_ARCH=X_I586
+  endif # ARCH i586
+
+  ifeq ($(ARCH), sparc)
+    CPPFLAGS += -DX_ARCH=X_SPARC
+  endif # ARCH sparc
+
+  ifeq ($(ARCH), sparcv9)
+    CPPFLAGS += -DX_ARCH=X_SPARCV9
+  endif # ARCH sparcv9
+
+  ifeq ($(ARCH), amd64)
+    CPPFLAGS += -DX_ARCH=X_AMD64
+  endif # ARCH amd64
+endif
 
 
 # files needed for MIDI i/o
diff -Nru openjdk.orig/jdk/src/share/native/com/sun/media/sound/SoundDefs.h openjdk/jdk/src/share/native/com/sun/media/sound/SoundDefs.h
--- openjdk.orig/jdk/src/share/native/com/sun/media/sound/SoundDefs.h	2008-08-14 08:43:23.000000000 +0100
+++ openjdk/jdk/src/share/native/com/sun/media/sound/SoundDefs.h	2008-08-20 23:33:49.000000000 +0100
@@ -38,6 +38,7 @@
 #define X_SPARCV9       3
 #define X_IA64          4
 #define X_AMD64         5
+#define X_ZERO          6
 
 // **********************************
 // Make sure you set X_PLATFORM and X_ARCH defines correctly.
