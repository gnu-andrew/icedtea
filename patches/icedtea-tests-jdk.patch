diff -Nru openjdk.orig/jdk/test/java/awt/Component/isLightweightCrash/StubPeerCrash.java openjdk/jdk/test/java/awt/Component/isLightweightCrash/StubPeerCrash.java
--- openjdk.orig/jdk/test/java/awt/Component/isLightweightCrash/StubPeerCrash.java	2008-11-14 21:11:49.000000000 +0000
+++ openjdk/jdk/test/java/awt/Component/isLightweightCrash/StubPeerCrash.java	2008-11-14 21:15:27.000000000 +0000
@@ -118,7 +118,7 @@
     public boolean     handlesWheelScrolling(){return true;};
     public void createBuffers(int numBuffers, BufferCapabilities caps) throws AWTException{};
     public Image getBackBuffer(){return null;};
-    public void flip(BufferCapabilities.FlipContents flipAction){};
+    public void flip(int x1, int y1, int x2, int y2, BufferCapabilities.FlipContents flipAction){};
     public void destroyBuffers(){};
 
     /**
diff -Nru openjdk.orig/jdk/test/java/awt/EventQueue/6638195/bug6638195.java openjdk/jdk/test/java/awt/EventQueue/6638195/bug6638195.java
--- openjdk.orig/jdk/test/java/awt/EventQueue/6638195/bug6638195.java	2008-11-14 21:16:51.000000000 +0000
+++ openjdk/jdk/test/java/awt/EventQueue/6638195/bug6638195.java	2008-11-14 21:21:40.000000000 +0000
@@ -76,9 +76,12 @@
         Callable<Void> afterDispatchCallable =
             new Callable<Void>() {
                 public Void call() {
+		  try {
                     delegate.afterDispatch(afterDispatchEventArgument[0],
                                            afterDispatchHandleArgument[0]);
-                    return null;
+		  }
+		  catch (InterruptedException e) {}
+		  return null;
                 }
             };
         methodMap = new HashMap<String, Object>();
@@ -91,8 +94,11 @@
         Callable<Object> beforeDispatchCallable =
             new Callable<Object>() {
                 public Object call() {
+		  try {
                     return delegate.beforeDispatch(
                         beforeDispatchEventArgument[0]);
+		  }
+		  catch (InterruptedException e) { return null; }
                 }
             };
         methodMap = new HashMap<String, Object>();
diff -Nru openjdk.orig/jdk/test/java/rmi/activation/rmidViaInheritedChannel/InheritedChannelNotServerSocket.java openjdk/jdk/test/java/rmi/activation/rmidViaInheritedChannel/InheritedChannelNotServerSocket.java
--- openjdk.orig/jdk/test/java/rmi/activation/rmidViaInheritedChannel/InheritedChannelNotServerSocket.java	2008-11-14 21:23:20.000000000 +0000
+++ openjdk/jdk/test/java/rmi/activation/rmidViaInheritedChannel/InheritedChannelNotServerSocket.java	2008-11-16 00:54:46.000000000 +0000
@@ -36,6 +36,7 @@
  */
 
 import java.io.IOException;
+import java.net.ProtocolFamily;
 import java.net.Socket;
 import java.nio.channels.Channel;
 import java.nio.channels.DatagramChannel;
@@ -137,6 +138,10 @@
             return provider.openDatagramChannel();
         }
 
+        public DatagramChannel openDatagramChannel(ProtocolFamily family) throws IOException {
+	    return provider.openDatagramChannel(family);
+	}
+
         public Pipe openPipe() throws IOException {
             return provider.openPipe();
         }
diff -Nru openjdk.orig/jdk/test/java/rmi/activation/rmidViaInheritedChannel/RmidViaInheritedChannel.java openjdk/jdk/test/java/rmi/activation/rmidViaInheritedChannel/RmidViaInheritedChannel.java
--- openjdk.orig/jdk/test/java/rmi/activation/rmidViaInheritedChannel/RmidViaInheritedChannel.java	2008-11-14 22:50:49.000000000 +0000
+++ openjdk/jdk/test/java/rmi/activation/rmidViaInheritedChannel/RmidViaInheritedChannel.java	2008-11-16 00:54:56.000000000 +0000
@@ -35,6 +35,7 @@
 import java.io.IOException;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
+import java.net.ProtocolFamily;
 import java.net.ServerSocket;
 import java.nio.channels.*;
 import java.nio.channels.spi.*;
@@ -126,6 +127,10 @@
             return provider.openDatagramChannel();
         }
 
+        public DatagramChannel openDatagramChannel(ProtocolFamily family) throws IOException {
+	    return provider.openDatagramChannel(family);
+	}
+
         public Pipe openPipe()
             throws IOException
         {
diff -Nru openjdk.orig/jdk/test/javax/print/attribute/PSCopiesFlavorTest.java openjdk/jdk/test/javax/print/attribute/PSCopiesFlavorTest.java
--- openjdk.orig/jdk/test/javax/print/attribute/PSCopiesFlavorTest.java	2008-11-14 04:33:18.000000000 +0000
+++ openjdk/jdk/test/javax/print/attribute/PSCopiesFlavorTest.java	2008-11-14 23:09:15.000000000 +0000
@@ -38,6 +38,8 @@
 
        DocFlavor flavor = DocFlavor.INPUT_STREAM.POSTSCRIPT;
        PrintService ps = PrintServiceLookup.lookupDefaultPrintService();
+       if (ps == null)
+	 return; // No printers available
        if (!(ps.isDocFlavorSupported(flavor))) {
            System.out.println("unsupported flavor :" + flavor);
            return;
diff -Nru openjdk.orig/jdk/test/sun/tools/native2ascii/NativeErrors.java openjdk/jdk/test/sun/tools/native2ascii/NativeErrors.java
--- openjdk.orig/jdk/test/sun/tools/native2ascii/NativeErrors.java	2008-11-14 04:33:14.000000000 +0000
+++ openjdk/jdk/test/sun/tools/native2ascii/NativeErrors.java	2008-11-14 23:20:31.000000000 +0000
@@ -89,8 +89,8 @@
         }
         //System.out.println("received: " + errorReceived);
         //System.out.println("expected: " + errorExpected);
-        if (!errorReceived.endsWith(errorExpected))
-            throw new RuntimeException("Native2ascii bad arg error broken.");
+        if (errorReceived == null || !errorReceived.endsWith(errorExpected))
+            throw new RuntimeException("Native2ascii " + errorExpected + " broken.");
     }
 
     private static String[] getComString(String arg2) {
