diff -urN openjdk.orig/j2se/make/common/shared/Platform.gmk openjdk/j2se/make/common/shared/Platform.gmk
--- openjdk.orig/j2se/make/common/shared/Platform.gmk	2007-05-24 03:33:20.000000000 -0400
+++ openjdk/j2se/make/common/shared/Platform.gmk	2007-06-17 19:02:41.000000000 -0400
@@ -194,9 +194,6 @@
                 i[3-9]86) \
                     echo i586 \
                     ;; \
-                ia64) \
-                    echo ia64 \
-                    ;; \
                 x86_64) \
                     echo amd64 \
                     ;; \
@@ -225,11 +222,15 @@
   else
     # i586 is 32-bit, amd64 is 64-bit
     ifndef ARCH_DATA_MODEL
-      ifeq ($(ARCH), i586)
-        ARCH_DATA_MODEL=32
-      else
-        ARCH_DATA_MODEL=64
-      endif
+      dataModelExpr = case "$(ARCH)" in \
+                        i586|ppc|s390) \
+                          echo 32 \
+                          ;; \
+                        *) \
+                          echo 64 \
+                          ;; \
+                      esac
+      ARCH_DATA_MODEL = $(shell $(dataModelExpr))
     endif
   endif
 
diff -urN openjdk.orig/j2se/make/common/shared/Compiler-gcc.gmk openjdk/j2se/make/common/shared/Compiler-gcc.gmk
--- openjdk.orig/j2se/make/common/shared/Compiler-gcc.gmk	2007-05-24 03:33:20.000000000 -0400
+++ openjdk/j2se/make/common/shared/Compiler-gcc.gmk	2007-06-17 19:05:16.000000000 -0400
@@ -75,20 +75,18 @@
     REQUIRED_CC_VER = 4.0
     REQUIRED_GCC_VER = 4.0.*
   else
+  REQUIRED_CC_VER = 3.2
   ifeq ($(ARCH_DATA_MODEL), 32)
     # i586
-    REQUIRED_CC_VER = 3.2
     REQUIRED_GCC_VER = 3.2.1*
     REQUIRED_GCC_VER_INT = 3.2.1-7a
   else
   ifeq ($(ARCH), amd64)
     # amd64
-    REQUIRED_CC_VER = 3.2
     REQUIRED_GCC_VER = 3.2.*
   endif
   ifeq ($(ARCH), ia64)
     # ia64
-    REQUIRED_CC_VER = 3.2
     REQUIRED_GCC_VER = 2.9[56789].*
   endif
   endif
diff -urN openjdk.orig/hotspot/make/defs.make openjdk/hotspot/make/defs.make
--- openjdk.orig/hotspot/make/defs.make	2007-05-24 03:30:12.000000000 -0400
+++ openjdk/hotspot/make/defs.make	2007-06-17 18:57:03.000000000 -0400
@@ -167,13 +167,17 @@
   # Use uname output for SRCARCH, but deal with platform differences. If ARCH
   # is not explicitly listed below, it is treated as i486. Also note amd64 is
   # a separate src arch, so LP64 && i486 ==> amd64.
-  SRCARCH     = $(ARCH/$(filter sparc sparc64 ia64 amd64 x86_64,$(ARCH)))
+  SRCARCH     = $(ARCH/$(filter sparc sparc64 ia64 amd64 x86_64 ppc ppc64 s390 s390x,$(ARCH)))
   ARCH/       = i486
   ARCH/sparc  = sparc
   ARCH/sparc64= sparc
   ARCH/ia64   = ia64
   ARCH/amd64  = amd64
   ARCH/x86_64 = amd64
+  ARCH/ppc    = ppc
+  ARCH/ppc64  = ppc64
+  ARCH/s390   = s390
+  ARCH/s390x  = s390x
   ifdef LP64
     ifeq ($(SRCARCH), i486)
       SRCARCH = amd64
@@ -195,8 +199,12 @@
   LIBARCH/sparc   = sparc
   LIBARCH/sparcv9 = sparcv9
   LIBARCH/ia64    = ia64
+  LIBARCH/ppc     = ppc
+  LIBARCH/ppc64   = ppc64
+  LIBARCH/s390    = s390
+  LIBARCH/s390x   = s390x
 
-  LP64_ARCH = sparcv9 amd64 ia64
+  LP64_ARCH = sparcv9 amd64 ia64 ppc64 s390x
 endif
 
 # Required make macro settings for all platforms
diff -urN openjdk.orig/hotspot/build/linux/makefiles/buildtree.make openjdk/hotspot/build/linux/makefiles/buildtree.make
--- openjdk.orig/hotspot/build/linux/makefiles/buildtree.make	2007-05-24 03:31:18.000000000 -0400
+++ openjdk/hotspot/build/linux/makefiles/buildtree.make	2007-06-17 18:57:03.000000000 -0400
@@ -277,6 +277,10 @@
 DATA_MODE/sparcv9 = 64
 DATA_MODE/amd64   = 64
 DATA_MODE/ia64    = 64
+DATA_MODE/ppc     = 32
+DATA_MODE/ppc64   = 64
+DATA_MODE/s390    = 32
+DATA_MODE/s390x   = 64
 
 JAVA_FLAG/32 = -d32
 JAVA_FLAG/64 = -d64
diff -urN openjdk.orig/hotspot/build/linux/makefiles/defs.make openjdk/hotspot/build/linux/makefiles/defs.make
--- openjdk.orig/hotspot/build/linux/makefiles/defs.make	2007-05-24 03:31:18.000000000 -0400
+++ openjdk/hotspot/build/linux/makefiles/defs.make	2007-06-17 18:57:03.000000000 -0400
@@ -87,6 +87,38 @@
   HS_ARCH          = i486
 endif
 
+# ppc
+ifeq ($(ARCH), ppc)
+  ARCH_DATA_MODEL  = 32
+  PLATFORM         = linux-ppc
+  VM_PLATFORM      = linux_ppc
+  HS_ARCH          = ppc
+endif
+
+# ppc64
+ifeq ($(ARCH), ppc64)
+  ARCH_DATA_MODEL  = 64
+  PLATFORM         = linux-ppc64
+  VM_PLATFORM      = linux_ppc64
+  HS_ARCH          = ppc64
+endif
+
+# s390
+ifeq ($(ARCH), s390)
+  ARCH_DATA_MODEL  = 32
+  PLATFORM         = linux-s390
+  VM_PLATFORM      = linux_s390
+  HS_ARCH          = s390
+endif
+
+# s390x
+ifeq ($(ARCH), s390x)
+  ARCH_DATA_MODEL  = 64
+  PLATFORM         = linux-s390x
+  VM_PLATFORM      = linux_s390x
+  HS_ARCH          = s390x
+endif
+
 JDK_INCLUDE_SUBDIR=linux
 MAKE_ARGS += HOTSPOT_BUILD_VERSION=$(FULL_VERSION)
 # FIXUP: The subdirectory for a debug build is NOT the same on all platforms
diff -urN openjdk.orig/hotspot/build/linux/makefiles/gcc.make openjdk/hotspot/build/linux/makefiles/gcc.make
--- openjdk.orig/hotspot/build/linux/makefiles/gcc.make	2007-05-24 03:31:18.000000000 -0400
+++ openjdk/hotspot/build/linux/makefiles/gcc.make	2007-06-17 18:57:03.000000000 -0400
@@ -71,6 +71,10 @@
 ARCHFLAG/ia64    =
 ARCHFLAG/sparc   = -m32 -mcpu=v9
 ARCHFLAG/sparcv9 = -m64 -mcpu=v9
+ARCHFLAG/ppc     = -m32
+ARCHFLAG/ppc64   = -m64
+ARCHFLAG/s390    = -m31
+ARCHFLAG/s390x   = -m64
 
 CFLAGS     += $(ARCHFLAG)
 AOUT_FLAGS += $(ARCHFLAG)
diff -urN openjdk.orig/hotspot/src/share/vm/utilities/macros.hpp openjdk/hotspot/src/share/vm/utilities/macros.hpp
--- openjdk.orig/hotspot/src/share/vm/utilities/macros.hpp	2007-05-24 03:31:13.000000000 -0400
+++ openjdk/hotspot/src/share/vm/utilities/macros.hpp	2007-06-17 18:57:03.000000000 -0400
@@ -149,6 +149,38 @@
 #define NOT_SPARC(code) code
 #endif
 
+#ifdef PPC
+#define PPC_ONLY(code) code
+#define NOT_PPC(code)
+#else
+#define PPC_ONLY(code)
+#define NOT_PPC(code) code
+#endif
+
+#ifdef PPC64
+#define PPC64_ONLY(code) code
+#define NOT_PPC64(code)
+#else
+#define PPC64_ONLY(code)
+#define NOT_PPC64(code) code
+#endif
+
+#ifdef S390
+#define S390_ONLY(code) code
+#define NOT_S390(code)
+#else
+#define S390_ONLY(code)
+#define NOT_S390(code) code
+#endif
+
+#ifdef S390X
+#define S390X_ONLY(code) code
+#define NOT_S390X(code)
+#else
+#define S390X_ONLY(code)
+#define NOT_S390X(code) code
+#endif
+
 #define FIX_THIS(code) report_assertion_failure("FIX_THIS",__FILE__, __LINE__, "")
 
 #define define_pd_global(type, name, value) const type pd_##name = value;
diff -urN openjdk.orig/hotspot/src/share/vm/runtime/vm_version.cpp openjdk/hotspot/src/share/vm/runtime/vm_version.cpp
--- openjdk.orig/hotspot/src/share/vm/runtime/vm_version.cpp	2007-05-24 03:31:12.000000000 -0400
+++ openjdk/hotspot/src/share/vm/runtime/vm_version.cpp	2007-06-17 18:57:03.000000000 -0400
@@ -195,7 +195,12 @@
 #define CPU      IA32_ONLY("x86")                \
                  IA64_ONLY("ia64")               \
                  AMD64_ONLY("amd64")             \
-                 SPARC_ONLY("sparc")
+                 SPARC_ONLY("sparc")		 \
+                 PPC_ONLY("ppc")		 \
+                 PPC64_ONLY("ppc64")		 \
+                 S390_ONLY("s390")		 \
+                 S390X_ONLY("s390x")
+    
 
 const char *Abstract_VM_Version::vm_platform_string() {
   return OS "-" CPU;
diff -urN openjdk.orig/hotspot/make/Makefile openjdk/hotspot/make/Makefile
--- openjdk.orig/hotspot/make/Makefile	2007-05-24 03:30:12.000000000 -0400
+++ openjdk/hotspot/make/Makefile	2007-06-17 18:57:03.000000000 -0400
@@ -68,12 +68,21 @@
 C1_VM_TARGETS=product1 fastdebug1 optimized1 jvmg1
 C2_VM_TARGETS=product  fastdebug  optimized  jvmg
 
+# Portable interpreter targets made available with this Makefile
+PI_VM_TARGETS=productcore fastdebugcore optimizedcore jvmgcore
+
 all:           all_product all_fastdebug
 all_product:   product product1 docs export_product
 all_fastdebug: fastdebug fastdebug1 docs export_fastdebug
 all_debug:     jvmg jvmg1 docs export_debug
 all_optimized: optimized optimized1 docs export_optimized
 
+allcore:           all_productcore all_fastdebugcore
+all_productcore:   productcore docs export_product
+all_fastdebugcore: fastdebugcore docs export_fastdebug
+all_debugcore:     jvmgcore docs export_debug
+all_optimizedcore: optimizedcore docs export_optimized
+
 # Do everything
 world:         all create_jdk
 
@@ -94,6 +103,9 @@
 $(C2_VM_TARGETS):
 	$(MAKE) VM_TARGET=$@ generic_build2
 
+$(PI_VM_TARGETS):
+	$(MAKE) VM_TARGET=$@ generic_build_pi
+
 # Build compiler1 (client) rule, different for platforms
 generic_build1:
 	$(MKDIR) -p $(OUTPUTDIR)
@@ -136,6 +148,17 @@
 		      $(MAKE_ARGS) $(VM_TARGET)
 endif
 
+# Build portable interpreter rule, different for platforms
+generic_build_pi:
+	$(MKDIR) -p $(OUTPUTDIR)
+ifeq ($(OSNAME),windows)
+	@$(ECHO) "No interpreter for OSNAME=$(OSNAME)"
+else
+	$(CD) $(OUTPUTDIR); \
+	    $(MAKE) -f $(ABS_OS_MAKEFILE) \
+		      $(MAKE_ARGS) CC_INTERP=true $(VM_TARGET)
+endif
+
 # Export file rule
 generic_export: $(EXPORT_LIST)
 export_product:
diff -urN openjdk.orig/control/make/hotspot-rules.gmk openjdk/control/make/hotspot-rules.gmk
--- openjdk.orig/control/make/hotspot-rules.gmk	2007-05-24 03:30:08.000000000 -0400
+++ openjdk/control/make/hotspot-rules.gmk	2007-06-17 18:57:03.000000000 -0400
@@ -75,6 +75,13 @@
   HOTSPOT_TARGET = all_fastdebug
 endif
 
+# Use the portable interpreter for platforms without a JIT
+ifneq ($(ARCH), i586)
+  ifeq ($(wildcard $(HOTSPOT_TOPDIR)/src/cpu/$(ARCH)/vm/$(ARCH).ad),)
+    HOTSPOT_TARGET := $(HOTSPOT_TARGET)core
+  endif
+endif
+
 HOTSPOT_MAKE_ARGS += ALT_SLASH_JAVA=$(SLASH_JAVA)
 HOTSPOT_MAKE_ARGS += ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)
 HOTSPOT_MAKE_ARGS += ALT_OUTPUTDIR=$(HOTSPOT_OUTPUTDIR)
