--- cacao/cacao/src/native/vm/openjdk/jvm.cpp.old	2016-04-01 04:20:21.912052101 +0100
+++ cacao/cacao/src/native/vm/openjdk/jvm.cpp	2016-04-01 04:50:05.054102464 +0100
@@ -3882,6 +3882,32 @@
 
 	return NULL;
 }
+/* JVM_GetResourceLookupCacheURLs */
+
+jobjectArray JVM_GetResourceLookupCacheURLs(JNIEnv *env, jobject loader)
+{
+	TRACEJVMCALLS(("JVM_GetResourceLookupCacheURLs(env=%p, loader=%p)", env, loader));
+
+	return NULL; // tell OpenJDK 8 that the lookup cache API is unavailable
+}
+
+/* JVM_GetResourceLookupCache */
+
+jintArray JVM_GetResourceLookupCache(JNIEnv *env, jobject loader, const char *resource_name)
+{
+	TRACEJVMCALLS(("JVM_GetResourceLookupCacheURLs(env=%p, loader=%p, resource_name=%s)", env, loader, resource_name));
+
+	return NULL; // tell OpenJDK 8 that the lookup cache API is unavailable
+}
+
+/* JVM_GetResourceLookupCache */
+
+jboolean JVM_KnownToNotExist(JNIEnv *env, jobject loader, const char *classname)
+{
+	TRACEJVMCALLS(("JVM_GetResourceLookupCacheURLs(env=%p, loader=%p, classname=%s)", env, loader, classname));
+
+	return JNI_FALSE; // tell OpenJDK 8 we don't know whether it exists or not
+}
 	
 } // extern "C"
 
--- cacao/cacao/contrib/mapfile-vers-product.old	2016-04-01 04:20:21.884052574 +0100
+++ cacao/cacao/contrib/mapfile-vers-product	2016-04-01 04:38:09.502110743 +0100
@@ -153,6 +153,8 @@
                 JVM_GetMethodIxNameUTF;
                 JVM_GetMethodIxSignatureUTF;
                 JVM_GetMethodParameterAnnotations;
+		JVM_GetResourceLookupCacheURLs;
+		JVM_GetResourceLookupCache;
                 JVM_GetPrimitiveArrayElement;
                 JVM_GetProtectionDomain;
                 JVM_GetSockName;
@@ -186,6 +188,7 @@
                 JVM_IsSilentCompiler;
                 JVM_IsSupportedJNIVersion;
                 JVM_IsThreadAlive;
+		JVM_KnownToNotExist;
                 JVM_LatestUserDefinedLoader;
                 JVM_Listen;
                 JVM_LoadClass0;
