diff -Nru cacao.old/cacao/contrib/mapfile-vers-product cacao/cacao/contrib/mapfile-vers-product
--- cacao.old/cacao/contrib/mapfile-vers-product	2016-04-01 08:07:33.021538925 +0100
+++ cacao/cacao/contrib/mapfile-vers-product	2016-04-01 08:08:19.576767011 +0100
@@ -127,12 +127,14 @@
                 JVM_GetClassNameUTF;
                 JVM_GetClassSignature;
                 JVM_GetClassSigners;
+		JVM_GetClassTypeAnnotations;
                 JVM_GetComponentType;
                 JVM_GetDeclaredClasses;
                 JVM_GetDeclaringClass;
                 JVM_GetEnclosingMethodInfo;
                 JVM_GetFieldAnnotations;
                 JVM_GetFieldIxModifiers;
+		JVM_GetFieldTypeAnnotations;
                 JVM_GetHostName;
                 JVM_GetInheritedAccessControlContext;
                 JVM_GetInterfaceVersion;
@@ -153,6 +155,8 @@
                 JVM_GetMethodIxNameUTF;
                 JVM_GetMethodIxSignatureUTF;
                 JVM_GetMethodParameterAnnotations;
+		JVM_GetMethodParameters;
+		JVM_GetMethodTypeAnnotations;
 		JVM_GetResourceLookupCacheURLs;
 		JVM_GetResourceLookupCache;
                 JVM_GetPrimitiveArrayElement;
@@ -180,6 +184,7 @@
                 JVM_InvokeMethod;
                 JVM_IsArrayClass;
                 JVM_IsConstructorIx;
+		JVM_IsVMGeneratedMethodIx;
                 JVM_IsInterface;
                 JVM_IsInterrupted;
                 JVM_IsNaN;
diff -Nru cacao.old/cacao/src/native/vm/openjdk/jvm.cpp cacao/cacao/src/native/vm/openjdk/jvm.cpp
--- cacao.old/cacao/src/native/vm/openjdk/jvm.cpp	2016-04-01 08:07:21.685726880 +0100
+++ cacao/cacao/src/native/vm/openjdk/jvm.cpp	2016-04-01 08:08:01.225071294 +0100
@@ -1110,6 +1110,15 @@
 	return (jbyteArray) annotations;
 }
 
+/* JVM_GetClassTypeAnnotations */
+
+jbyteArray JVM_GetClassTypeAnnotations(JNIEnv *env, jclass cls)
+{
+	TRACEJVMCALLS(("JVM_GetClassAnnotations(env=%p, cls=%p)", env, cls));
+
+	log_println("JVM_GetClassTypeAnnotations: IMPLEMENT ME!");
+	return NULL;
+}
 
 /* JVM_GetFieldAnnotations */
 
@@ -1127,6 +1136,16 @@
 	return (jbyteArray) jlrf.get_annotations();
 }
 
+/* JVM_GetFieldTypeAnnotations */
+
+jbyteArray JVM_GetFieldTypeAnnotations(JNIEnv *env, jobject field)
+{
+	TRACEJVMCALLS(("JVM_GetFieldTypeAnnotations(env=%p, field=%p)", env, field));
+
+	log_println("JVM_GetFieldTypeAnnotations: IMPLEMENT ME!");
+	return NULL;
+}
+
 
 /* JVM_GetMethodAnnotations */
 
@@ -1144,6 +1163,15 @@
 	return (jbyteArray) jlrm.get_annotations();
 }
 
+/* JVM_GetMethodTypeAnnotations */
+
+jbyteArray JVM_GetMethodTypeAnnotations(JNIEnv *env, jobject method)
+{
+	TRACEJVMCALLS(("JVM_GetMethodTypeAnnotations(env=%p, method=%p)", env, method));
+
+	log_println("JVM_GetMethodTypeAnnotations: IMPLEMENT ME!");
+	return NULL;
+}
 
 /* JVM_GetMethodDefaultAnnotationValue */
 
@@ -1178,6 +1206,14 @@
 	return (jbyteArray) jlrm.get_parameterAnnotations();
 }
 
+/* JVM_GetMethodParameters */
+
+jbyteArray JVM_GetMethodParameters(JNIEnv *env, jobject method) {
+	TRACEJVMCALLS(("JVM_GetMethodParameters(env=%p, method=%p)", env, method));
+
+	log_println("JVM_GetMethodParameters: IMPLEMENT ME!");
+	return NULL;
+}
 
 /* JVM_GetClassDeclaredFields */
 
@@ -1864,6 +1900,14 @@
 	return 0;
 }
 
+/* JVM_IsVMGeneratedMethodIx */
+
+jboolean JVM_IsVMGeneratedMethodIx(JNIEnv *env, jclass cls, int method_index)
+{
+    log_println("JVM_IsVMGeneratedMethodIx: IMPLEMENT ME!");
+
+    return 0;
+}
 
 /* JVM_GetMethodIxNameUTF */
 
