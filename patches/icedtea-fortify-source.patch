--- openjdk/hotspot/src/share/vm/prims/jvm.cpp~	2008-11-20 09:41:05.000000000 +0100
+++ openjdk/hotspot/src/share/vm/prims/jvm.cpp	2008-12-02 16:55:32.000000000 +0100
@@ -2474,7 +2474,7 @@
   if (Arguments::vfprintf_hook() != NULL) {
     jio_fprintf(defaultStream::output_stream(), "%s", s);
   } else {
-    ::write(defaultStream::output_fd(), s, (int)strlen(s));
+    ssize_t rv_neverused __attribute__((unused)) = ::write(defaultStream::output_fd(), s, (int)strlen(s));
   }
 }
 
--- openjdk/hotspot/src/share/vm/utilities/ostream.cpp~	2008-12-02 16:38:32.000000000 +0100
+++ openjdk/hotspot/src/share/vm/utilities/ostream.cpp	2008-12-02 16:58:26.000000000 +0100
@@ -300,7 +300,7 @@
 }
 
 void fileStream::write(const char* s, size_t len) {
-  if (_file != NULL)  fwrite(s, 1, len, _file);
+  if (_file != NULL)  size_t rv_neverused __attribute__((unused)) = fwrite(s, 1, len, _file);
   update_position(s, len);
 }
 
@@ -328,7 +328,7 @@
 }
 
 void fdStream::write(const char* s, size_t len) {
-  if (_fd != -1) ::write(_fd, s, (int)len);
+  if (_fd != -1)  ssize_t rv_neverused __attribute__((unused)) = ::write(_fd, s, (int)len);
   update_position(s, len);
 }
 
--- openjdk/hotspot/src/os/linux/vm/os_linux.cpp~	2008-12-02 16:38:27.000000000 +0100
+++ openjdk/hotspot/src/os/linux/vm/os_linux.cpp	2008-12-02 17:05:17.000000000 +0100
@@ -2066,7 +2066,7 @@
                 CAST_FROM_FN_PTR(address, os::jvm_path),
                 dli_fname, sizeof(dli_fname), NULL);
   assert(ret != 0, "cannot locate libjvm");
-  realpath(dli_fname, buf);
+  char *rv_neverused __attribute__((unused)) = realpath(dli_fname, buf);
 
   if (strcmp(Arguments::sun_java_launcher(), "gamma") == 0) {
     // Support for the gamma launcher.  Typical value for buf is
@@ -2090,7 +2090,7 @@
         assert(strstr(p, "/libjvm") == p, "invalid library name");
         p = strstr(p, "_g") ? "_g" : "";
 
-        realpath(java_home_var, buf);
+        char *rv_neverused __attribute__((unused)) = realpath(java_home_var, buf);
         sprintf(buf + strlen(buf), "/jre/lib/%s", cpu_arch);
         if (0 == access(buf, F_OK)) {
           // Use current module name "libjvm[_g].so" instead of
@@ -2101,7 +2101,7 @@
           sprintf(buf + strlen(buf), "/hotspot/libjvm%s.so", p);
         } else {
           // Go back to path of .so
-          realpath(dli_fname, buf);
+          rv_neverused = realpath(dli_fname, buf);
         }
       }
     }
