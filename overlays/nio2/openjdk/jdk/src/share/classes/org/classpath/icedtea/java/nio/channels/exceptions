#
# Copyright 2000-2008 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

# Generated exception classes for java.nio.channels

PACKAGE=java.nio.channels
# This year should only change if the generated source is modified.
COPYRIGHT_YEARS=2000-2007
SINCE=1.7
 
SUPER=java.io.IOException

gen InterruptedByTimeoutException "
 * Checked exception received by a thread when a timeout elapses before an
 * asynchronous operation completes." \
 -4268008601014042947L

SUPER=IllegalArgumentException

gen IllegalChannelGroupException "
 * Unchecked exception thrown when an attempt is made to open a channel
 * in a group that was not created by the same provider. " \
 -2495041211157744253L
 
SUPER=IllegalStateException

gen AcceptPendingException "
 * Unchecked exception thrown when an attempt is made to initiate an accept
 * operation on a channel and a previous accept operation has not completed." \
 2721339977965416421L

gen ReadPendingException "
 * Unchecked exception thrown when an attempt is made to read from an
 * asynchronous socket channel and a previous read has not completed." \
 1986315242191227217L

gen WritePendingException "
 * Unchecked exception thrown when an attempt is made to write to an
 * asynchronous socket channel and a previous write has not completed." \
 7031871839266032276L

gen ShutdownChannelGroupException "
 * Unchecked exception thrown when an attempt is made to construct a channel in 
 * a group that is shutdown or the completion handler for an I/O operation 
 * cannot be invoked because the channel group is shutdown." \
 -3903801676350154157L
